Index: views/AdventureGameView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.AdventureClue;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport javax.xml.stream.events.EndElement;\r\nimport java.io.File;\r\nimport java.util.Objects;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"Group 69's New Adventure Game\");\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // add timer\r\n        time timee = new time(10, 0);\r\n        Label timer = new Label();\r\n        gridPane.add(timer, 1, 0);\r\n        timer.setStyle(\"-fx-text-fill: white;\");\r\n        timer.setFont(new Font(\"Arial\", 30));\r\n        timer.setText(timee.getCurrentTime());\r\n        Timeline timeline = new Timeline(\r\n                new KeyFrame(Duration.seconds(1),\r\n                        e -> {\r\n                            if(timee.getCurrentTime().equals(\"0:0\")){\r\n                                gridPane.requestFocus();\r\n                                EndScreenView endscreen = new EndScreenView(this);\r\n                            }\r\n                            timee.oneSecondPassed();\r\n                            timer.setText(timee.getCurrentTime());\r\n                        }));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        } else if(text.equalsIgnoreCase(\"GUESS\")){\r\n        gridPane.requestFocus();\r\n        EndScreenView endscreen = new EndScreenView(this);\r\n        return;\r\n    }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        // if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            String clueString = this.model.getPlayer().getCurrentRoom().getClueString();\r\n            if (objectString != null && !objectString.isEmpty() && clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects and clues in this room:\\n\" + objectString + \"\\n\" + clueString);\r\n            else if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else if (clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nClues in this room:\\n\" + clueString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".png\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        // implement the same thing above but for the clues but still append into the objectsInInventory and InRoom VBox\r\n        for (AdventureClue item : this.model.getPlayer().getCurrentRoom().cluesInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Clue.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeClue(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        // Do the same as above but for clues\r\n        for (AdventureClue item : this.model.getPlayer().clueInventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Clue Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropClue(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        // Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        //mediaPlayer = new MediaPlayer(sound);\r\n        //mediaPlayer.play();\r\n        //mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
--- a/views/AdventureGameView.java	(revision a919cd3b065c040081718bde8027ddbeb7613526)
+++ b/views/AdventureGameView.java	(date 1701704102084)
@@ -194,6 +194,14 @@
         timeline.setCycleCount(Timeline.INDEFINITE);
         timeline.play();
 
+        //text-to-speech button
+        Button tts = new Button();
+        customizeButton(tts, 140, 50);
+        tts.setText("Articulate Desc");
+        makeButtonAccessible(tts, "Articulate Room Description Button", "Read room description.", "Run a text-to-speech sound to read the room description.");
+        tts.setOnAction(e -> {articulateRoomDescription();});
+        topButtons.getChildren().add(tts);
+
         // Render everything
         var scene = new Scene( gridPane ,  1000, 800);
         scene.setFill(Color.BLACK);
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520366)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml	(date 1701704520366)
@@ -0,0 +1,64 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]" date="1701366995899" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 12:56 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/1.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/1.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/10.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/10.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/8.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/8.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/3.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/3.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/6.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/6.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/9.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/9.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/5.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/5.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/LoadView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/LoadView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/LoadView.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/4.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/4.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/7.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/7.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/2.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/2.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/assignment2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/assignment2.iml b/../out/production/group_69/out/production/assignment2/assignment2.iml
new file mode 100644
--- /dev/null	(date 1700102103462)
+++ b/../out/production/group_69/out/production/assignment2/assignment2.iml	(date 1700102103462)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="junit.jupiter" level="project" />
+    <orderEntry type="library" name="javafx-swt" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701394193544)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch	(date 1701394193544)
@@ -0,0 +1,105 @@
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.AdventureClue;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\nimport java.util.Objects;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"Group 69's New Adventure Game\");\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        // if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            String clueString = this.model.getPlayer().getCurrentRoom().getClueString();\r\n            if (objectString != null && !objectString.isEmpty() && clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects and clues in this room:\\n\" + objectString + \"\\n\" + clueString);\r\n            else if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else if (clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nClues in this room:\\n\" + clueString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".jpeg\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        // implement the same thing above but for the clues but still append into the objectsInInventory and InRoom VBox\r\n        for (AdventureClue item : this.model.getPlayer().getCurrentRoom().cluesInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Clue.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeClue(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        // Do the same as above but for clues\r\n        for (AdventureClue item : this.model.getPlayer().clueInventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Clue Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropClue(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        mediaPlayer = new MediaPlayer(sound);\r\n        mediaPlayer.play();\r\n        mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/views/AdventureGameView.java	(date 1701394140680)
+@@ -404,7 +404,7 @@
+     private void getRoomImage() {
+ 
+         int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();
+-        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".jpeg";
++        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".png";
+ 
+         Image roomImageFile = new Image(roomImage);
+         roomImageView = new ImageView(roomImageFile);
+Index: out/production/assignment2/.idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/out/production/assignment2/.idea/libraries/javafx_swt.xml b/out/production/assignment2/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/out/production/assignment2/.idea/libraries/javafx_swt.xml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ /dev/null	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: .idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/.idea/libraries/javafx_swt.xml b/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/.idea/libraries/javafx_swt.xml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ /dev/null	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/out/production/assignment2/assignment2.iml	(date 1701393967380)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/assignment2.iml	(date 1701393967380)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701366978437)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch	(date 1701366978437)
@@ -0,0 +1,374 @@
+Index: Games/TinyGame/rooms.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>1\r\nLibrary\r\nYou are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.\r\n-----\r\nOUT         2\r\nNORTH       2\r\n\r\n2\r\nHallway\r\nYou are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.\r\n-----\r\nWEST        3\r\nEAST        4\r\nNORTH       5\r\nSOUTH       1\r\nDOWN        6\r\n\r\n3\r\nSon's Bedroom\r\nYou are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.\r\n-----\r\nOUT         2\r\nEAST        2\r\n\r\n4\r\nMaster Bedroom\r\nYou are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.\r\n-----\r\nOUT         2\r\nWEST        2\r\nUP          7\r\n\r\n5\r\nBathroom\r\nYou are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.\r\n-----\r\nOUT         2\r\nSOUTH       2\r\n\r\n6\r\nLiving Room\r\nYou are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.\r\n-----\r\nWEST        8\r\nEAST        9\r\n\r\n7\r\nAttic\r\nYou are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.\r\n-----\r\nDOWN        4\r\nOUT         4\r\nFORCED      ?\r\n\r\n8\r\nKitchen\r\nYou are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.\r\n-----\r\nOUT         10\r\nWEST        10\r\nEAST        6\r\n\r\n9\r\nOffice\r\nYou are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.\r\n-----\r\nOUT         6\r\nWEST        6\r\n\r\n10\r\nBackyard\r\nYou are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.\r\n-----\r\nIN          8\r\nDOWN        11\r\nWEST        11\r\n\r\n11\r\nBasement\r\nYou are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.\r\n-----\r\nUP          10\r\nOUT         10\r\nNORTH       12\r\nFORCED      ?\r\n\r\n12\r\nBilliard Room\r\nYou are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.\r\n-----\r\nOUT         11\r\nSOUTH       11\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/Games/TinyGame/rooms.txt b/Games/TinyGame/rooms.txt
+--- a/Games/TinyGame/rooms.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/Games/TinyGame/rooms.txt	(date 1701366887137)
+@@ -50,7 +50,7 @@
+ -----
+ DOWN        4
+ OUT         4
+-FORCED      ?
++FORCED      0
+ 
+ 8
+ Kitchen
+@@ -82,7 +82,7 @@
+ UP          10
+ OUT         10
+ NORTH       12
+-FORCED      ?
++FORCED      0
+ 
+ 12
+ Billiard Room
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"dhill591's Adventure Game\"); //Replace <YOUR UTORID> with your UtorID\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"LOOK\") || text.equalsIgnoreCase(\"L\")) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription();\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (!objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            articulateRoomDescription(); //all we want, if we are looking, is to repeat description.\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".png\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        mediaPlayer = new MediaPlayer(sound);\r\n        mediaPlayer.play();\r\n        mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/views/AdventureGameView.java	(date 1701366940930)
+@@ -627,11 +627,11 @@
+         else musicFile = "./" + adventureName + "/sounds/" + roomName.toLowerCase() + "-short.mp3" ;
+         musicFile = musicFile.replace(" ","-");
+ 
+-        Media sound = new Media(new File(musicFile).toURI().toString());
++        // Media sound = new Media(new File(musicFile).toURI().toString());
+ 
+-        mediaPlayer = new MediaPlayer(sound);
+-        mediaPlayer.play();
+-        mediaPlaying = true;
++        //mediaPlayer = new MediaPlayer(sound);
++        //mediaPlayer.play();
++        //mediaPlaying = true;
+ 
+     }
+ 
+Index: out/production/assignment2/.idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/out/production/assignment2/.idea/libraries/javafx_swt.xml b/out/production/assignment2/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/out/production/assignment2/.idea/libraries/javafx_swt.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ /dev/null	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: .idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/.idea/libraries/javafx_swt.xml b/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/.idea/libraries/javafx_swt.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ /dev/null	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/assignment2.iml	(date 1701366841017)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="assignment2" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: out/production/assignment2/Games/TinyGame/objects.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>BIRD\r\na water bird\r\n1\r\n\r\nCHEST\r\na pirate chest\r\n2\r\n\r\nBOOK\r\na copy of an illuminated manuscript\r\n3
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/Games/TinyGame/objects.txt b/out/production/assignment2/Games/TinyGame/objects.txt
+--- a/out/production/assignment2/Games/TinyGame/objects.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/Games/TinyGame/objects.txt	(date 1701366731809)
+@@ -1,11 +1,35 @@
+-BIRD
+-a water bird
++BLACK_HAIR
++Strands of enigmatic black hair, potential link to the culprit.
+ 1
+ 
+-CHEST
+-a pirate chest
+-2
++BROKEN_GLASS 
++Shattered shards hint at a forced entry or struggle.
++9
++
++FOOTPRINT
++Faint footprint, a silent witness to the intruder's presence.
++11
++
++GUN
++A cold, discarded weapon - the tool of a deadly act.
++7
++
++KEY
++Unusual key, unlocking secrets or pointing to an accomplice.
++3
++
++KNIFE
++Blood-stained blade, the silent storyteller of a violent confrontation.
++6
+ 
+-BOOK
+-a copy of an illuminated manuscript
+-3
+\ No newline at end of file
++POISONOUS_PLANT
++A plantation full of poison, waiting for unsuspecting victims to enter its lush but deadly embrace
++11
++
++JOURNAL
++A journal with "Why am I dying to live if I'm just living to die?" written as its last sentence
++3
++
++PEN
++A normal pen
++10
+\ No newline at end of file
+Index: out/production/assignment2/Games/TinyGame/rooms.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>1\r\nOutside building\r\nYou are standing at the end of a road before a small brick building.  A small stream flows out of the building and down a gully to the south.  A road runs up a small hill to the west.\r\n-----\r\nWEST       2\r\nUP         2\r\nNORTH      3\r\nIN         3\r\nSOUTH      4\r\nDOWN       4\r\n\r\n2\r\nEnd of road\r\nYou are at the end of a road at the top of a small hill. You can see a small building in the valley to the east.\r\n-----\r\nEAST       1\r\nWEST       3\r\nDOWN       3\r\n\r\n3\r\nInside building\r\nYou are inside a building, a well house for a large spring. The exit door is to the south.  There is another room to the north, but the door is barred by a shimmering curtain.\r\n-----\r\nSOUTH      1\r\nWEST       5\r\nOUT        6/BIRD\r\nOUT        1\r\nNORTH     3\r\nXYZZY     2/BOOK\r\nXYZZY     1\r\nPLUGH     2/BOOK\r\nPLUGH     1\r\n\r\n4\r\nValley beside a stream\r\nYou are in a valley in the forest beside a stream tumbling along a rocky bed.  The stream is flowing to the south.\r\n-----\r\nNORTH      1\r\nUP         1\r\nSOUTH      5\r\nDOWN       5\r\nWEST       5\r\n\r\n5\r\nSlit in rock\r\nAt your feet all the water of the stream splashes into a two-inch slit in the rock.  To the south, the streambed is bare rock.\r\n-----\r\nNORTH      4\r\nUP         4\r\nSOUTH      6\r\nDOWN       6\r\nWEST       6\r\n\r\n6\r\nCurtain1\r\nYou are passing through a curtain!\r\n-----\r\nFORCED    7/BIRD\r\nFORCED    9\r\n\r\n7\r\nCurtain2\r\nYou are passing through another curtain!\r\n-----\r\nFORCED    8\r\n\r\n8\r\nCurtain3\r\nYet another curtain here!\r\n-----\r\nFORCED    10\r\n\r\n9\r\nMissing Treasures\r\nYou can pass through this curtain only if you're carrying all the treasures.  You don't yet have all of them.\r\n-----\r\nFORCED     3\r\n\r\n10\r\nVictory\r\nYou have collected all the treasures and are admitted to the Adventurer's Hall of Fame.  Congratulations!\r\n-----\r\nFORCED     0\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/Games/TinyGame/rooms.txt b/out/production/assignment2/Games/TinyGame/rooms.txt
+--- a/out/production/assignment2/Games/TinyGame/rooms.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/Games/TinyGame/rooms.txt	(date 1701366887137)
+@@ -1,84 +1,92 @@
+ 1
+-Outside building
+-You are standing at the end of a road before a small brick building.  A small stream flows out of the building and down a gully to the south.  A road runs up a small hill to the west.
++Library
++You are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.
+ -----
+-WEST       2
+-UP         2
+-NORTH      3
+-IN         3
+-SOUTH      4
+-DOWN       4
++OUT         2
++NORTH       2
+ 
+ 2
+-End of road
+-You are at the end of a road at the top of a small hill. You can see a small building in the valley to the east.
++Hallway
++You are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.
+ -----
+-EAST       1
+-WEST       3
+-DOWN       3
++WEST        3
++EAST        4
++NORTH       5
++SOUTH       1
++DOWN        6
+ 
+ 3
+-Inside building
+-You are inside a building, a well house for a large spring. The exit door is to the south.  There is another room to the north, but the door is barred by a shimmering curtain.
++Son's Bedroom
++You are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.
+ -----
+-SOUTH      1
+-WEST       5
+-OUT        6/BIRD
+-OUT        1
+-NORTH     3
+-XYZZY     2/BOOK
+-XYZZY     1
+-PLUGH     2/BOOK
+-PLUGH     1
++OUT         2
++EAST        2
+ 
+ 4
+-Valley beside a stream
+-You are in a valley in the forest beside a stream tumbling along a rocky bed.  The stream is flowing to the south.
++Master Bedroom
++You are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.
++-----
++OUT         2
++WEST        2
++UP          7
++
++5
++Bathroom
++You are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.
+ -----
+-NORTH      1
+-UP         1
+-SOUTH      5
+-DOWN       5
+-WEST       5
++OUT         2
++SOUTH       2
+ 
+-5
+-Slit in rock
+-At your feet all the water of the stream splashes into a two-inch slit in the rock.  To the south, the streambed is bare rock.
++6
++Living Room
++You are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.
+ -----
+-NORTH      4
+-UP         4
+-SOUTH      6
+-DOWN       6
+-WEST       6
++WEST        8
++EAST        9
+ 
+-6
+-Curtain1
+-You are passing through a curtain!
++7
++Attic
++You are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.
+ -----
+-FORCED    7/BIRD
+-FORCED    9
++DOWN        4
++OUT         4
++FORCED      0
+ 
+-7
+-Curtain2
+-You are passing through another curtain!
++8
++Kitchen
++You are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.
+ -----
+-FORCED    8
++OUT         10
++WEST        10
++EAST        6
+ 
+-8
+-Curtain3
+-Yet another curtain here!
++9
++Office
++You are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.
+ -----
+-FORCED    10
++OUT         6
++WEST        6
+ 
+-9
+-Missing Treasures
+-You can pass through this curtain only if you're carrying all the treasures.  You don't yet have all of them.
++10
++Backyard
++You are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.
+ -----
+-FORCED     3
++IN          8
++DOWN        11
++WEST        11
+ 
+-10
+-Victory
+-You have collected all the treasures and are admitted to the Adventurer's Hall of Fame.  Congratulations!
++11
++Basement
++You are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.
+ -----
+-FORCED     0
++UP          10
++OUT         10
++NORTH       12
++FORCED      0
+ 
++12
++Billiard Room
++You are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.
++-----
++OUT         11
++SOUTH       11
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/assignment2.iml	(date 1701366841017)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="assignment2" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: out/production/assignment2/.idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/.idea/misc.xml b/out/production/assignment2/.idea/misc.xml
+--- a/out/production/assignment2/.idea/misc.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/.idea/misc.xml	(date 1701366792802)
+@@ -1,4 +1,3 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ProjectRootManager" version="2" project-jdk-name="20" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
Index: ../out/production/group_69/out/production/assignment2/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/misc.xml b/../out/production/group_69/out/production/assignment2/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1700102103375)
+++ b/../out/production/group_69/out/production/assignment2/.idea/misc.xml	(date 1700102103375)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: out/production/assignment2/.idea/libraries/assignment2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/libraries/assignment2.xml b/out/production/assignment2/.idea/libraries/assignment2.xml
new file mode 100644
--- /dev/null	(date 1701366841029)
+++ b/out/production/assignment2/.idea/libraries/assignment2.xml	(date 1701366841029)
@@ -0,0 +1,18 @@
+<component name="libraryTable">
+  <library name="assignment2">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../out/production/group_69/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/workspace.xml b/../out/production/group_69/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1701309660691)
+++ b/../out/production/group_69/.idea/workspace.xml	(date 1701309660691)
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ChangeListManager">
+    <list default="true" id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/../.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AdventureModel/AdventureGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/AdventureModel/AdventureGame.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AdventureModel/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/AdventureModel/Room.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/.gitkeep" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/BLACK_HAIR.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/BROKEN_GLASS.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/FOOTPRINT.jpeg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/GUN.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/KEY.jpeg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objectImages/KNIFE.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/objects.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Games/TinyGame/objects.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Games/TinyGame/room-images/.gitkeep" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../group_69.iml" beforeDir="false" afterPath="$PROJECT_DIR$/../group_69.iml" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 4
+}]]></component>
+  <component name="ProjectId" id="2YsM1CdUcwICSbLZYbguqSL2oYO" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "Develop",
+    "last_opened_file_path": "C:/Users/Christian Kevin/CSC207/group_69/assignment2",
+    "project.structure.last.edited": "Libraries",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0"
+  }
+}]]></component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="" />
+      <created>1701309617314</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1701309617314</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt b/../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt
new file mode 100644
--- /dev/null	(date 1700102103439)
+++ b/../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt	(date 1700102103439)
@@ -0,0 +1,84 @@
+1
+Outside building
+You are standing at the end of a road before a small brick building.  A small stream flows out of the building and down a gully to the south.  A road runs up a small hill to the west.
+-----
+WEST       2
+UP         2
+NORTH      3
+IN         3
+SOUTH      4
+DOWN       4
+
+2
+End of road
+You are at the end of a road at the top of a small hill. You can see a small building in the valley to the east.
+-----
+EAST       1
+WEST       3
+DOWN       3
+
+3
+Inside building
+You are inside a building, a well house for a large spring. The exit door is to the south.  There is another room to the north, but the door is barred by a shimmering curtain.
+-----
+SOUTH      1
+WEST       5
+OUT        6/BIRD
+OUT        1
+NORTH     3
+XYZZY     2/BOOK
+XYZZY     1
+PLUGH     2/BOOK
+PLUGH     1
+
+4
+Valley beside a stream
+You are in a valley in the forest beside a stream tumbling along a rocky bed.  The stream is flowing to the south.
+-----
+NORTH      1
+UP         1
+SOUTH      5
+DOWN       5
+WEST       5
+
+5
+Slit in rock
+At your feet all the water of the stream splashes into a two-inch slit in the rock.  To the south, the streambed is bare rock.
+-----
+NORTH      4
+UP         4
+SOUTH      6
+DOWN       6
+WEST       6
+
+6
+Curtain1
+You are passing through a curtain!
+-----
+FORCED    7/BIRD
+FORCED    9
+
+7
+Curtain2
+You are passing through another curtain!
+-----
+FORCED    8
+
+8
+Curtain3
+Yet another curtain here!
+-----
+FORCED    10
+
+9
+Missing Treasures
+You can pass through this curtain only if you're carrying all the treasures.  You don't yet have all of them.
+-----
+FORCED     3
+
+10
+Victory
+You have collected all the treasures and are admitted to the Adventurer's Hall of Fame.  Congratulations!
+-----
+FORCED     0
+
Index: ../out/production/group_69/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/vcs.xml b/../out/production/group_69/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1700102103282)
+++ b/../out/production/group_69/.idea/vcs.xml	(date 1700102103282)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520419)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml	(date 1701704520419)
@@ -0,0 +1,14 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]" date="1701398909280" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 9:48 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView$1.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520388)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml	(date 1701704520388)
@@ -0,0 +1,9 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]" date="1701394205303" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 8:29 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/assignment2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/assignment2.iml b/../out/production/group_69/assignment2.iml
new file mode 100644
--- /dev/null	(date 1700102103372)
+++ b/../out/production/group_69/assignment2.iml	(date 1700102103372)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="junit.jupiter" level="project" />
+    <orderEntry type="library" name="javafx-swt" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: ../out/production/group_69/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/.gitignore b/../out/production/group_69/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1700102103280)
+++ b/../out/production/group_69/.idea/.gitignore	(date 1700102103280)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../out/production/group_69/out/production/assignment2/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/.gitignore b/../out/production/group_69/out/production/assignment2/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1700102103373)
+++ b/../out/production/group_69/out/production/assignment2/.idea/.gitignore	(date 1700102103373)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml b/../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml
new file mode 100644
--- /dev/null	(date 1700102103373)
+++ b/../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml	(date 1700102103373)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="javafx-swt">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520410)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml	(date 1701704520410)
@@ -0,0 +1,9 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]" date="1701394447288" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 8:33 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/.idea/libraries/javafx_swt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/libraries/javafx_swt.xml b/../out/production/group_69/.idea/libraries/javafx_swt.xml
new file mode 100644
--- /dev/null	(date 1700102103281)
+++ b/../out/production/group_69/.idea/libraries/javafx_swt.xml	(date 1700102103281)
@@ -0,0 +1,16 @@
+<component name="libraryTable">
+  <library name="javafx-swt">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: ../out/production/group_69/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/modules.xml b/../out/production/group_69/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1700102103282)
+++ b/../out/production/group_69/.idea/modules.xml	(date 1700102103282)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/assignment2.iml" filepath="$PROJECT_DIR$/assignment2.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt b/../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt
new file mode 100644
--- /dev/null	(date 1700102103403)
+++ b/../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt	(date 1700102103403)
@@ -0,0 +1,21 @@
+To play this game you must move between locations and interact with objects by typing one or two word commands.
+
+Some commands are motion commands.  These will move you from room to room. Motion commands include:
+
+UP, DOWN, EAST, WEST, NORTH, SOUTH
+
+Not all motions are possible in every room. In addition, some rooms may have "special" or "secret" motion commands.
+
+There are other action commands in the game. These include:
+
+COMMANDS: this will print the moves that are legal in a given room.
+HELP: this will display instructions
+INVENTORY: this will print your current inventory.
+LOOK: this will print the description for the current room.
+TAKE <object>: this will take an object from a room and place it in your inventory. Replace <object> with the name of the object to take.  The object must be present in the room in order to take it.
+DROP <object>: this will drop an object in your inventory. Replace <object> with the name of the object to drop. The object must be in your inventory to drop it.
+
+Some paths may be blocked.  To unblock a path you may need a specific object to be in your inventory.
+
+The game is over when your player reaches the VICTORY room, or when your player DIES.
+
Index: ../out/production/group_69/out/production/assignment2/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/vcs.xml b/../out/production/group_69/out/production/assignment2/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1700102103376)
+++ b/../out/production/group_69/out/production/assignment2/.idea/vcs.xml	(date 1700102103376)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../out/production/group_69/Games/TinyGame/synonyms.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/Games/TinyGame/synonyms.txt b/../out/production/group_69/Games/TinyGame/synonyms.txt
new file mode 100644
--- /dev/null	(date 1696382567392)
+++ b/../out/production/group_69/Games/TinyGame/synonyms.txt	(date 1696382567392)
@@ -0,0 +1,17 @@
+Q=QUIT
+L=LOOK
+CATCH=TAKE
+RELEASE=DROP
+I=INVENTORY
+N=NORTH
+S=SOUTH
+E=EAST
+W=WEST
+U=UP
+D=DOWN
+BACK=OUT
+GOLD=NUGGET
+BAG=COINS
+NEST=EGGS
+BOTTLE=WATER
+GRAB=TAKE
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1701704504477)
+++ b/.idea/workspace.xml	(date 1701704504477)
@@ -0,0 +1,287 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/assignment2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/javafx_media.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/javafx_sdk_21.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/LoadView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/assignment2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/javafx_media.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/javafx_sdk_21.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureClue.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/Saved/2023.10.28.11.30.test7.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE1.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE2.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE3.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE4.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clues.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/.gitkeep" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/BLACK_HAIR.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/BROKEN_GLASS.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/FOOTPRINT.jpeg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/GUN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/JOURNAL.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/KEY.jpeg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/KNIFE.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/PEN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/POISONOUS_PLANT.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/.gitkeep" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/11.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/12.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/views/EndScreenView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/views/time.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/libraries/javafx_swt.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/libraries/junit_jupiter.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureGameApp.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureGame.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureLoader.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureObject.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Passage.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/PassageTable.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Player.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Room.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/BasicAdventureTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.23.22.10.59.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.23.22.27.10.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.24.20.51.50.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.26.20.10.test1.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.26.20.47.test2.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.21.test5.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.26.test6.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.30.test7.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/SaveFileNameTextField" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/help.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/BIRD.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/BOOK.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/CHEST.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/JOURNAL.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/PEN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/POISONOUS_PLANT.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objects.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/11.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/12.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/rooms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain1-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain1-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain2-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain2-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain3-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain3-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/end-of-road-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/end-of-road-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/inside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/inside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/missing-treasures-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/missing-treasures-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/outside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/outside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/slit-in-rock-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/slit-in-rock-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/valley-beside-a-stream-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/valley-beside-a-stream-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/victory-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/victory-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/synonyms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/assignment2.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.23.22.10.59.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.23.22.27.10.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.24.20.51.50.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.26.20.10.test1.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.26.20.47.test2.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.28.11.21.test5.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.28.11.26.test6.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/SaveFileNameTextField" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/BIRD.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/BOOK.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/CHEST.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain1-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain1-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain2-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain2-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain3-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain3-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/end-of-road-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/end-of-road-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/inside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/inside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/missing-treasures-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/missing-treasures-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/outside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/outside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/slit-in-rock-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/slit-in-rock-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/valley-beside-a-stream-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/valley-beside-a-stream-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/victory-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/victory-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/assignment2.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/LoadView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/SaveView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureGame.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureGame.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureLoader.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureLoader.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/views/AdventureGameView.java" beforeDir="false" afterPath="$PROJECT_DIR$/views/AdventureGameView.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$/.." value="End_Of_Game" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
+  <component name="ProjectId" id="2YsM1CdUcwICSbLZYbguqSL2oYO" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "Sound",
+    "last_opened_file_path": "C:/Users/Christian Kevin/CSC207/javafx-sdk-21/lib/javafx-swt.jar",
+    "project.structure.last.edited": "Libraries",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\AdventureModel" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame\objectImages" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame\room-images" />
+    </key>
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="views" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="Unnamed" type="Application" factoryName="Application" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdventureGameApp" />
+      <module name="assignment2" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Users\Christian Kevin\CSC207\javafx-sdk-21\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="" />
+      <created>1701309617314</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1701309617314</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520366)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml	(date 1701704520366)
@@ -0,0 +1,64 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]" date="1701366995899" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 12:56 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/1.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/1.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/10.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/10.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/8.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/8.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/3.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/3.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/6.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/6.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/9.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/9.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/5.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/5.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/LoadView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/LoadView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/LoadView.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/4.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/4.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/7.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/7.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/Games/TinyGame/room-images/2.png" />
+    <option name="AFTER_PATH" value="out/production/assignment2/Games/TinyGame/room-images/2.png" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1701364059294)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch	(date 1701364059294)
@@ -0,0 +1,242 @@
+Index: assignment2/views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"dhill591's Adventure Game\"); //Replace <YOUR UTORID> with your UtorID\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"LOOK\") || text.equalsIgnoreCase(\"L\")) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription();\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (!objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            articulateRoomDescription(); //all we want, if we are looking, is to repeat description.\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".png\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        mediaPlayer = new MediaPlayer(sound);\r\n        mediaPlayer.play();\r\n        mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2/views/AdventureGameView.java b/assignment2/views/AdventureGameView.java
+--- a/assignment2/views/AdventureGameView.java	
++++ b/assignment2/views/AdventureGameView.java	
+@@ -270,7 +270,7 @@
+             String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription();
+             String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();
+             if (!objectString.isEmpty()) roomDescLabel.setText(roomDesc + "\n\nObjects in this room:\n" + objectString);
+-            articulateRoomDescription(); //all we want, if we are looking, is to repeat description.
++            //articulateRoomDescription(); //all we want, if we are looking, is to repeat description.
+             return;
+         } else if (text.equalsIgnoreCase("HELP") || text.equalsIgnoreCase("H")) {
+             showInstructions();
+@@ -372,7 +372,7 @@
+         stage.sizeToScene();
+ 
+         //finally, articulate the description
+-        if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();
++        //if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();
+     }
+ 
+     /**
+Index: assignment2/AdventureModel/Room.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package AdventureModel;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * This class contains the information about a \r\n * room in the Adventure Game.\r\n */\r\npublic class Room implements Serializable {\r\n\r\n    private final String adventureName;\r\n    /**\r\n     * The number of the room.\r\n     */\r\n    private int roomNumber;\r\n\r\n    /**\r\n     * The name of the room.\r\n     */\r\n    private String roomName;\r\n\r\n    /**\r\n     * The description of the room.\r\n     */\r\n    private String roomDescription;\r\n\r\n    /**\r\n     * The passage table for the room.\r\n     */\r\n    private PassageTable motionTable = new PassageTable();\r\n\r\n    /**\r\n     * The list of objects in the room.\r\n     */\r\n    public ArrayList<AdventureObject> objectsInRoom = new ArrayList<AdventureObject>();\r\n\r\n    /**\r\n     * A boolean to store if the room has been visited or not\r\n     */\r\n    private boolean isVisited;\r\n\r\n    /**\r\n     * AdvGameRoom constructor.\r\n     *\r\n     * @param roomName: The name of the room.\r\n     * @param roomNumber: The number of the room.\r\n     * @param roomDescription: The description of the room.\r\n     */\r\n    public Room(String roomName, int roomNumber, String roomDescription, String adventureName){\r\n        this.roomName = roomName;\r\n        this.roomNumber = roomNumber;\r\n        this.roomDescription = roomDescription;\r\n        this.adventureName = adventureName;\r\n        this.isVisited = false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Returns a comma delimited list of every\r\n     * object's description that is in the given room,\r\n     * e.g. \"a can of tuna, a beagle, a lamp\".\r\n     *\r\n     * @return delimited string of object descriptions\r\n     */\r\n    public String getObjectString() {\r\n        // Create a list of all the objects in the room and then move everything to a string\r\n        List<String> lst = new ArrayList<>();\r\n        String final_str = \"\";\r\n\r\n        for (int i = 0; i < this.objectsInRoom.size(); i++){\r\n            lst.add(this.objectsInRoom.get(i).getDescription());\r\n        }\r\n\r\n        for (int i = 0; i < lst.size(); i++){\r\n            if (i == lst.size() - 1){\r\n                final_str += lst.get(i);\r\n            } else{\r\n                final_str += lst.get(i) + \",\";\r\n            }\r\n        }\r\n\r\n        return final_str;\r\n    }\r\n\r\n    /**\r\n     * Returns a comma delimited list of every\r\n     * move that is possible from the given room,\r\n     * e.g. \"DOWN, UP, NORTH, SOUTH\".\r\n     *\r\n     * @return delimited string of possible moves\r\n     */\r\n    public String getCommands() {\r\n        // Create a list of all the directions and then move everything to a string\r\n        List<String> lst = new ArrayList<>();\r\n        String final_str = \"\";\r\n\r\n        for (int i = 0; i < this.getMotionTable().passageTable.size(); i++){\r\n            lst.add(this.getMotionTable().passageTable.get(i).getDirection());\r\n        }\r\n\r\n        for (int i = 0; i < lst.size(); i++){\r\n            if (i == lst.size() - 1){\r\n                final_str += lst.get(i);\r\n            } else{\r\n                final_str += lst.get(i) + \",\";\r\n            }\r\n        }\r\n\r\n        return final_str;\r\n    }\r\n\r\n    /**\r\n     * This method adds a game object to the room.\r\n     *\r\n     * @param object to be added to the room.\r\n     */\r\n    public void addGameObject(AdventureObject object){\r\n        this.objectsInRoom.add(object);\r\n    }\r\n\r\n    /**\r\n     * This method removes a game object from the room.\r\n     *\r\n     * @param object to be removed from the room.\r\n     */\r\n    public void removeGameObject(AdventureObject object){\r\n        this.objectsInRoom.remove(object);\r\n    }\r\n\r\n    /**\r\n     * This method checks if an object is in the room.\r\n     *\r\n     * @param objectName Name of the object to be checked.\r\n     * @return true if the object is present in the room, false otherwise.\r\n     */\r\n    public boolean checkIfObjectInRoom(String objectName){\r\n        for(int i = 0; i<objectsInRoom.size();i++){\r\n            if(this.objectsInRoom.get(i).getName().equals(objectName)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sets the visit status of the room to true.\r\n     */\r\n    public void visit(){\r\n        isVisited = true;\r\n    }\r\n\r\n    /**\r\n     * Getter for returning an AdventureObject with a given name\r\n     *\r\n     * @param objectName: Object name to find in the room\r\n     * @return: AdventureObject\r\n     */\r\n    public AdventureObject getObject(String objectName){\r\n        for(int i = 0; i<objectsInRoom.size();i++){\r\n            if(this.objectsInRoom.get(i).getName().equals(objectName)) return this.objectsInRoom.get(i);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Getter method for the number attribute.\r\n     *\r\n     * @return: number of the room\r\n     */\r\n    public int getRoomNumber(){\r\n        return this.roomNumber;\r\n    }\r\n\r\n    /**\r\n     * Getter method for the description attribute.\r\n     *\r\n     * @return: description of the room\r\n     */\r\n    public String getRoomDescription(){\r\n        return this.roomDescription.replace(\"\\n\", \" \");\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter method for the name attribute.\r\n     *\r\n     * @return: name of the room\r\n     */\r\n    public String getRoomName(){\r\n        return this.roomName;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter method for the visit attribute.\r\n     *\r\n     * @return: visit status of the room\r\n     */\r\n    public boolean getVisited(){\r\n        return this.isVisited;\r\n    }\r\n\r\n\r\n    /**\r\n     * Getter method for the motionTable attribute.\r\n     *\r\n     * @return: motion table of the room\r\n     */\r\n    public PassageTable getMotionTable(){\r\n        return this.motionTable;\r\n    }\r\n\r\n\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2/AdventureModel/Room.java b/assignment2/AdventureModel/Room.java
+--- a/assignment2/AdventureModel/Room.java	
++++ b/assignment2/AdventureModel/Room.java	
+@@ -8,7 +8,7 @@
+  * This class contains the information about a 
+  * room in the Adventure Game.
+  */
+-public class Room implements Serializable {
++public class    Room implements Serializable {
+ 
+     private final String adventureName;
+     /**
+Index: assignment2/AdventureModel/AdventureGame.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package AdventureModel;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\n/**\r\n * Class AdventureGame.  Handles all the necessary tasks to run the Adventure game.\r\n */\r\npublic class AdventureGame implements Serializable {\r\n    private final String directoryName; //An attribute to store the Introductory text of the game.\r\n    private String helpText; //A variable to store the Help text of the game. This text is displayed when the user types \"HELP\" command.\r\n    private final HashMap<Integer, Room> rooms; //A list of all the rooms in the game.\r\n    private HashMap<String,String> synonyms = new HashMap<>(); //A HashMap to store synonyms of commands.\r\n    private final String[] actionVerbs = {\"QUIT\",\"INVENTORY\",\"TAKE\",\"DROP\"}; //List of action verbs (other than motions) that exist in all games. Motion vary depending on the room and game.\r\n    public Player player; //The Player of the game.\r\n\r\n    /**\r\n     * Adventure Game Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     *\r\n     * @param name the name of the adventure\r\n     */\r\n    public AdventureGame(String name){\r\n        this.synonyms = new HashMap<>();\r\n        this.rooms = new HashMap<>();\r\n        this.directoryName = \"Games/\" + name; //all games files are in the Games directory!\r\n        try {\r\n            setUpGame();\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(\"An Error Occurred: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save the current state of the game to a file\r\n     * \r\n     * @param file pointer to file to write to\r\n     */\r\n    public void saveModel(File file) {\r\n        try {\r\n            FileOutputStream outfile = new FileOutputStream(file);\r\n            ObjectOutputStream oos = new ObjectOutputStream(outfile);\r\n            oos.writeObject(this);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * setUpGame\r\n     * __________________________\r\n     *\r\n     * @throws IOException in the case of a file I/O error\r\n     */\r\n    public void setUpGame() throws IOException {\r\n\r\n        String directoryName = this.directoryName;\r\n        AdventureLoader loader = new AdventureLoader(this, directoryName);\r\n        loader.loadGame();\r\n\r\n        // set up the player's current location\r\n        this.player = new Player(this.rooms.get(1));\r\n    }\r\n\r\n    /**\r\n     * tokenize\r\n     * __________________________\r\n     *\r\n     * @param input string from the command line\r\n     * @return a string array of tokens that represents the command.\r\n     */\r\n    public String[] tokenize(String input){\r\n\r\n        input = input.toUpperCase();\r\n        String[] commandArray = input.split(\" \");\r\n\r\n        int i = 0;\r\n        while (i < commandArray.length) {\r\n            if(this.synonyms.containsKey(commandArray[i])){\r\n                commandArray[i] = this.synonyms.get(commandArray[i]);\r\n            }\r\n            i++;\r\n        }\r\n        return commandArray;\r\n\r\n    }\r\n\r\n    /**\r\n     * movePlayer\r\n     * __________________________\r\n     * Moves the player in the given direction, if possible.\r\n     * Return false if the player wins or dies as a result of the move.\r\n     *\r\n     * @param direction the move command\r\n     * @return false, if move results in death or a win (and game is over).  Else, true.\r\n     */\r\n    public boolean movePlayer(String direction) {\r\n\r\n        direction = direction.toUpperCase();\r\n        PassageTable motionTable = this.player.getCurrentRoom().getMotionTable(); //where can we move?\r\n        if (!motionTable.optionExists(direction)) return true; //no move\r\n\r\n        ArrayList<Passage> possibilities = new ArrayList<>();\r\n        for (Passage entry : motionTable.getDirection()) {\r\n            if (entry.getDirection().equals(direction)) { //this is the right direction\r\n                possibilities.add(entry); // are there possibilities?\r\n            }\r\n        }\r\n\r\n        //try the blocked passages first\r\n        Passage chosen = null;\r\n        for (Passage entry : possibilities) {\r\n            System.out.println(entry.getIsBlocked());\r\n            System.out.println(entry.getKeyName());\r\n\r\n            if (chosen == null && entry.getIsBlocked()) {\r\n                if (this.player.getInventory().contains(entry.getKeyName())) {\r\n                    chosen = entry; //we can make it through, given our stuff\r\n                    break;\r\n                }\r\n            } else { chosen = entry; } //the passage is unlocked\r\n        }\r\n\r\n        if (chosen == null) return true; //doh, we just can't move.\r\n\r\n        int roomNumber = chosen.getDestinationRoom();\r\n        Room room = this.rooms.get(roomNumber);\r\n        this.player.setCurrentRoom(room);\r\n\r\n        return !this.player.getCurrentRoom().getMotionTable().getDirection().get(0).getDirection().equals(\"FORCED\");\r\n    }\r\n\r\n    /**\r\n     * interpretAction\r\n     * interpret the user's action.\r\n     *\r\n     * @param command String representation of the command.\r\n     */\r\n    public String interpretAction(String command){\r\n\r\n        String[] inputArray = tokenize(command); //look up synonyms\r\n\r\n        PassageTable motionTable = this.player.getCurrentRoom().getMotionTable(); //where can we move?\r\n\r\n        if (motionTable.optionExists(inputArray[0])) {\r\n            if (!movePlayer(inputArray[0])) {\r\n                if (this.player.getCurrentRoom().getMotionTable().getDirection().get(0).getDestinationRoom() == 0)\r\n                    return \"GAME OVER\";\r\n                else return \"FORCED\";\r\n            } //something is up here! We are dead or we won.\r\n            return null;\r\n        } else if(Arrays.asList(this.actionVerbs).contains(inputArray[0])) {\r\n            if(inputArray[0].equals(\"QUIT\")) { return \"GAME OVER\"; } //time to stop!\r\n            else if(inputArray[0].equals(\"INVENTORY\") && this.player.getInventory().size() == 0) return \"INVENTORY IS EMPTY\";\r\n            else if(inputArray[0].equals(\"INVENTORY\") && this.player.getInventory().size() > 0) return \"THESE OBJECTS ARE IN YOUR INVENTORY:\\n\" + this.player.getInventory().toString();\r\n            else if(inputArray[0].equals(\"TAKE\") && inputArray.length < 2) return \"THE TAKE COMMAND REQUIRES AN OBJECT\";\r\n            else if(inputArray[0].equals(\"DROP\") && inputArray.length < 2) return \"THE DROP COMMAND REQUIRES AN OBJECT\";\r\n            else if(inputArray[0].equals(\"TAKE\") && inputArray.length == 2) {\r\n                if(this.player.getCurrentRoom().checkIfObjectInRoom(inputArray[1])) {\r\n                    this.player.takeObject(inputArray[1]);\r\n                    return \"YOU HAVE TAKEN:\\n \" + inputArray[1];\r\n                } else {\r\n                    return \"THIS OBJECT IS NOT HERE:\\n \" + inputArray[1];\r\n                }\r\n            }\r\n            else if(inputArray[0].equals(\"DROP\") && inputArray.length == 2) {\r\n                if(this.player.checkIfObjectInInventory(inputArray[1])) {\r\n                    this.player.dropObject(inputArray[1]);\r\n                    return \"YOU HAVE DROPPED:\\n \" + inputArray[1];\r\n                } else {\r\n                    return \"THIS OBJECT IS NOT IN YOUR INVENTORY:\\n \" + inputArray[1];\r\n                }\r\n            }\r\n        }\r\n        return \"INVALID COMMAND.\";\r\n    }\r\n\r\n    /**\r\n     * getDirectoryName\r\n     * __________________________\r\n     * Getter method for directory \r\n     * @return directoryName\r\n     */\r\n    public String getDirectoryName() {\r\n        return this.directoryName;\r\n    }\r\n\r\n    /**\r\n     * getInstructions\r\n     * __________________________\r\n     * Getter method for instructions \r\n     * @return helpText\r\n     */\r\n    public String getInstructions() {\r\n        return helpText;\r\n    }\r\n\r\n    /**\r\n     * getPlayer\r\n     * __________________________\r\n     * Getter method for Player \r\n     */\r\n    public Player getPlayer() {\r\n        return this.player;\r\n    }\r\n\r\n    /**\r\n     * getRooms\r\n     * __________________________\r\n     * Getter method for rooms \r\n     * @return map of key value pairs (integer to room)\r\n     */\r\n    public HashMap<Integer, Room> getRooms() {\r\n        return this.rooms;\r\n    }\r\n\r\n    /**\r\n     * getSynonyms\r\n     * __________________________\r\n     * Getter method for synonyms \r\n     * @return map of key value pairs (synonym to command)\r\n     */\r\n    public HashMap<String, String> getSynonyms() {\r\n        return this.synonyms;\r\n    }\r\n\r\n    /**\r\n     * setHelpText\r\n     * __________________________\r\n     * Setter method for helpText\r\n     * @param help which is text to set\r\n     */\r\n    public void setHelpText(String help) {\r\n        this.helpText = help;\r\n    }\r\n\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2/AdventureModel/AdventureGame.java b/assignment2/AdventureModel/AdventureGame.java
+--- a/assignment2/AdventureModel/AdventureGame.java	
++++ b/assignment2/AdventureModel/AdventureGame.java	
+@@ -24,7 +24,7 @@
+     public AdventureGame(String name){
+         this.synonyms = new HashMap<>();
+         this.rooms = new HashMap<>();
+-        this.directoryName = "Games/" + name; //all games files are in the Games directory!
++        this.directoryName = "assignment2/Games/" + name; //all games files are in the Games directory!
+         try {
+             setUpGame();
+         } catch (IOException e) {
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fedfccc0-a8f7-4125-8f44-9f21308d5468\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/assignment2/Games/TinyGame/objects.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/assignment2/Games/TinyGame/objects.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XcsqGvsbJb9uJESxbJBFXvpEZT\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;VisualizingObject&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Christian Kevin/CSC207/sidhart6/lab09&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Christian Kevin\\CSC207\\group_69\\assignment2\\Games\\TinyGame\\objectImages\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fedfccc0-a8f7-4125-8f44-9f21308d5468\" name=\"Changes\" comment=\"\" />\r\n      <created>1698939892849</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698939892849</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	
++++ b/.idea/workspace.xml	
+@@ -6,7 +6,20 @@
+   <component name="ChangeListManager">
+     <list default="true" id="fedfccc0-a8f7-4125-8f44-9f21308d5468" name="Changes" comment="">
+       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/AdventureModel/AdventureGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/assignment2/AdventureModel/AdventureGame.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/AdventureModel/Room.java" beforeDir="false" afterPath="$PROJECT_DIR$/assignment2/AdventureModel/Room.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/.gitkeep" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/BLACK_HAIR.jpg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/BROKEN_GLASS.jpg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/FOOTPRINT.jpeg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/GUN.jpg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/KEY.jpeg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/KNIFE.png" beforeDir="false" />
+       <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objects.txt" beforeDir="false" afterPath="$PROJECT_DIR$/assignment2/Games/TinyGame/objects.txt" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/room-images/.gitkeep" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/rooms.txt" beforeDir="false" afterPath="$PROJECT_DIR$/assignment2/Games/TinyGame/rooms.txt" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/views/AdventureGameView.java" beforeDir="false" afterPath="$PROJECT_DIR$/assignment2/views/AdventureGameView.java" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/group_69.iml" beforeDir="false" afterPath="$PROJECT_DIR$/group_69.iml" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -14,6 +27,11 @@
+     <option name="LAST_RESOLUTION" value="IGNORE" />
+   </component>
+   <component name="Git.Settings">
++    <option name="RECENT_BRANCH_BY_REPOSITORY">
++      <map>
++        <entry key="$PROJECT_DIR$" value="End_Of_Game" />
++      </map>
++    </option>
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+   </component>
+   <component name="ProjectColorInfo">{
+@@ -24,18 +42,35 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;git-widget-placeholder&quot;: &quot;VisualizingObject&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Christian Kevin/CSC207/sidhart6/lab09&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "Downloaded.Files.Path.Enabled": "false",
++    "Repository.Attach.Annotations": "false",
++    "Repository.Attach.JavaDocs": "false",
++    "Repository.Attach.Sources": "false",
++    "RunOnceActivity.OpenProjectViewOnStart": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "git-widget-placeholder": "Develop",
++    "last_opened_file_path": "C:/Users/Christian Kevin/CSC207/group_69/assignment2",
++    "project.structure.last.edited": "Global Libraries",
++    "project.structure.proportion": "0.15",
++    "project.structure.side.proportion": "0.2"
+   }
+-}</component>
++}]]></component>
+   <component name="RecentsManager">
+     <key name="MoveFile.RECENT_KEYS">
+       <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame\objectImages" />
+     </key>
++  </component>
++  <component name="RunManager">
++    <configuration name="Unnamed" type="Application" factoryName="Application" nameIsGenerated="true">
++      <option name="MAIN_CLASS_NAME" value="AdventureGameApp" />
++      <module name="group_69" />
++      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Users\Christian Kevin\CSC207\javafx-sdk-21\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media" />
++      <method v="2">
++        <option name="Make" enabled="true" />
++      </method>
++    </configuration>
+   </component>
+   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+   <component name="TaskManager">
+Index: group_69.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/assignment2\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/group_69.iml b/group_69.iml
+--- a/group_69.iml	
++++ b/group_69.iml	
+@@ -7,5 +7,22 @@
+     </content>
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
++    <orderEntry type="module-library">
++      <library name="JUnit5.8.1">
++        <CLASSES>
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/" />
++          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/" />
++        </CLASSES>
++        <JAVADOC />
++        <SOURCES />
++      </library>
++    </orderEntry>
++    <orderEntry type="library" name="javafx-sdk-21" level="application" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: assignment2/Games/TinyGame/objects.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>BLACK_HAIR\r\nStrands of enigmatic black hair, potential link to the culprit.\r\n1\r\n\r\nBROKEN_GLASS \r\nShattered shards hint at a forced entry or struggle.\r\n9\r\n\r\nFOOTPRINT\r\nFaint footprint, a silent witness to the intruder's presence.\r\n11\r\n\r\nGUN\r\nA cold, discarded weapon - the tool of a deadly act.\r\n7\r\n\r\nKEY\r\nUnusual key, unlocking secrets or pointing to an accomplice.\r\n3\r\n\r\nKNIFE\r\nBlood-stained blade, the silent storyteller of a violent confrontation.\r\n6\r\n\r\nPOISONOUS_PLANT\r\nA plantation full of poison, waiting for unsuspecting victims to enter its lush but deadly embrace\r\n11\r\n\r\nJOURNAL\r\nA journal with \"Why am I dying to live if I'm just living to die?\" written as its last sentence\r\n3\r\n\r\nPEN\r\nA normal pen\r\n10
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2/Games/TinyGame/objects.txt b/assignment2/Games/TinyGame/objects.txt
+--- a/assignment2/Games/TinyGame/objects.txt	
++++ b/assignment2/Games/TinyGame/objects.txt	
+@@ -1,35 +1,11 @@
+-BLACK_HAIR
+-Strands of enigmatic black hair, potential link to the culprit.
++BIRD
++a water bird
+ 1
+ 
+-BROKEN_GLASS 
+-Shattered shards hint at a forced entry or struggle.
+-9
+-
+-FOOTPRINT
+-Faint footprint, a silent witness to the intruder's presence.
+-11
+-
+-GUN
+-A cold, discarded weapon - the tool of a deadly act.
+-7
+-
+-KEY
+-Unusual key, unlocking secrets or pointing to an accomplice.
+-3
+-
+-KNIFE
+-Blood-stained blade, the silent storyteller of a violent confrontation.
+-6
++CHEST
++a pirate chest
++2
+ 
+-POISONOUS_PLANT
+-A plantation full of poison, waiting for unsuspecting victims to enter its lush but deadly embrace
+-11
+-
+-JOURNAL
+-A journal with "Why am I dying to live if I'm just living to die?" written as its last sentence
+-3
+-
+-PEN
+-A normal pen
+-10
+\ No newline at end of file
++BOOK
++a copy of an illuminated manuscript
++3
+\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701366978437)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch	(date 1701366978437)
@@ -0,0 +1,374 @@
+Index: Games/TinyGame/rooms.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>1\r\nLibrary\r\nYou are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.\r\n-----\r\nOUT         2\r\nNORTH       2\r\n\r\n2\r\nHallway\r\nYou are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.\r\n-----\r\nWEST        3\r\nEAST        4\r\nNORTH       5\r\nSOUTH       1\r\nDOWN        6\r\n\r\n3\r\nSon's Bedroom\r\nYou are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.\r\n-----\r\nOUT         2\r\nEAST        2\r\n\r\n4\r\nMaster Bedroom\r\nYou are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.\r\n-----\r\nOUT         2\r\nWEST        2\r\nUP          7\r\n\r\n5\r\nBathroom\r\nYou are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.\r\n-----\r\nOUT         2\r\nSOUTH       2\r\n\r\n6\r\nLiving Room\r\nYou are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.\r\n-----\r\nWEST        8\r\nEAST        9\r\n\r\n7\r\nAttic\r\nYou are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.\r\n-----\r\nDOWN        4\r\nOUT         4\r\nFORCED      ?\r\n\r\n8\r\nKitchen\r\nYou are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.\r\n-----\r\nOUT         10\r\nWEST        10\r\nEAST        6\r\n\r\n9\r\nOffice\r\nYou are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.\r\n-----\r\nOUT         6\r\nWEST        6\r\n\r\n10\r\nBackyard\r\nYou are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.\r\n-----\r\nIN          8\r\nDOWN        11\r\nWEST        11\r\n\r\n11\r\nBasement\r\nYou are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.\r\n-----\r\nUP          10\r\nOUT         10\r\nNORTH       12\r\nFORCED      ?\r\n\r\n12\r\nBilliard Room\r\nYou are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.\r\n-----\r\nOUT         11\r\nSOUTH       11\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/Games/TinyGame/rooms.txt b/Games/TinyGame/rooms.txt
+--- a/Games/TinyGame/rooms.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/Games/TinyGame/rooms.txt	(date 1701366887137)
+@@ -50,7 +50,7 @@
+ -----
+ DOWN        4
+ OUT         4
+-FORCED      ?
++FORCED      0
+ 
+ 8
+ Kitchen
+@@ -82,7 +82,7 @@
+ UP          10
+ OUT         10
+ NORTH       12
+-FORCED      ?
++FORCED      0
+ 
+ 12
+ Billiard Room
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"dhill591's Adventure Game\"); //Replace <YOUR UTORID> with your UtorID\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"LOOK\") || text.equalsIgnoreCase(\"L\")) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription();\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (!objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            articulateRoomDescription(); //all we want, if we are looking, is to repeat description.\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".png\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        mediaPlayer = new MediaPlayer(sound);\r\n        mediaPlayer.play();\r\n        mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/views/AdventureGameView.java	(date 1701366940930)
+@@ -627,11 +627,11 @@
+         else musicFile = "./" + adventureName + "/sounds/" + roomName.toLowerCase() + "-short.mp3" ;
+         musicFile = musicFile.replace(" ","-");
+ 
+-        Media sound = new Media(new File(musicFile).toURI().toString());
++        // Media sound = new Media(new File(musicFile).toURI().toString());
+ 
+-        mediaPlayer = new MediaPlayer(sound);
+-        mediaPlayer.play();
+-        mediaPlaying = true;
++        //mediaPlayer = new MediaPlayer(sound);
++        //mediaPlayer.play();
++        //mediaPlaying = true;
+ 
+     }
+ 
+Index: out/production/assignment2/.idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/out/production/assignment2/.idea/libraries/javafx_swt.xml b/out/production/assignment2/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/out/production/assignment2/.idea/libraries/javafx_swt.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ /dev/null	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: .idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/.idea/libraries/javafx_swt.xml b/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/.idea/libraries/javafx_swt.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ /dev/null	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/assignment2.iml	(date 1701366841017)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="assignment2" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: out/production/assignment2/Games/TinyGame/objects.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>BIRD\r\na water bird\r\n1\r\n\r\nCHEST\r\na pirate chest\r\n2\r\n\r\nBOOK\r\na copy of an illuminated manuscript\r\n3
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/Games/TinyGame/objects.txt b/out/production/assignment2/Games/TinyGame/objects.txt
+--- a/out/production/assignment2/Games/TinyGame/objects.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/Games/TinyGame/objects.txt	(date 1701366731809)
+@@ -1,11 +1,35 @@
+-BIRD
+-a water bird
++BLACK_HAIR
++Strands of enigmatic black hair, potential link to the culprit.
+ 1
+ 
+-CHEST
+-a pirate chest
+-2
++BROKEN_GLASS 
++Shattered shards hint at a forced entry or struggle.
++9
++
++FOOTPRINT
++Faint footprint, a silent witness to the intruder's presence.
++11
++
++GUN
++A cold, discarded weapon - the tool of a deadly act.
++7
++
++KEY
++Unusual key, unlocking secrets or pointing to an accomplice.
++3
++
++KNIFE
++Blood-stained blade, the silent storyteller of a violent confrontation.
++6
+ 
+-BOOK
+-a copy of an illuminated manuscript
+-3
+\ No newline at end of file
++POISONOUS_PLANT
++A plantation full of poison, waiting for unsuspecting victims to enter its lush but deadly embrace
++11
++
++JOURNAL
++A journal with "Why am I dying to live if I'm just living to die?" written as its last sentence
++3
++
++PEN
++A normal pen
++10
+\ No newline at end of file
+Index: out/production/assignment2/Games/TinyGame/rooms.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>1\r\nOutside building\r\nYou are standing at the end of a road before a small brick building.  A small stream flows out of the building and down a gully to the south.  A road runs up a small hill to the west.\r\n-----\r\nWEST       2\r\nUP         2\r\nNORTH      3\r\nIN         3\r\nSOUTH      4\r\nDOWN       4\r\n\r\n2\r\nEnd of road\r\nYou are at the end of a road at the top of a small hill. You can see a small building in the valley to the east.\r\n-----\r\nEAST       1\r\nWEST       3\r\nDOWN       3\r\n\r\n3\r\nInside building\r\nYou are inside a building, a well house for a large spring. The exit door is to the south.  There is another room to the north, but the door is barred by a shimmering curtain.\r\n-----\r\nSOUTH      1\r\nWEST       5\r\nOUT        6/BIRD\r\nOUT        1\r\nNORTH     3\r\nXYZZY     2/BOOK\r\nXYZZY     1\r\nPLUGH     2/BOOK\r\nPLUGH     1\r\n\r\n4\r\nValley beside a stream\r\nYou are in a valley in the forest beside a stream tumbling along a rocky bed.  The stream is flowing to the south.\r\n-----\r\nNORTH      1\r\nUP         1\r\nSOUTH      5\r\nDOWN       5\r\nWEST       5\r\n\r\n5\r\nSlit in rock\r\nAt your feet all the water of the stream splashes into a two-inch slit in the rock.  To the south, the streambed is bare rock.\r\n-----\r\nNORTH      4\r\nUP         4\r\nSOUTH      6\r\nDOWN       6\r\nWEST       6\r\n\r\n6\r\nCurtain1\r\nYou are passing through a curtain!\r\n-----\r\nFORCED    7/BIRD\r\nFORCED    9\r\n\r\n7\r\nCurtain2\r\nYou are passing through another curtain!\r\n-----\r\nFORCED    8\r\n\r\n8\r\nCurtain3\r\nYet another curtain here!\r\n-----\r\nFORCED    10\r\n\r\n9\r\nMissing Treasures\r\nYou can pass through this curtain only if you're carrying all the treasures.  You don't yet have all of them.\r\n-----\r\nFORCED     3\r\n\r\n10\r\nVictory\r\nYou have collected all the treasures and are admitted to the Adventurer's Hall of Fame.  Congratulations!\r\n-----\r\nFORCED     0\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/Games/TinyGame/rooms.txt b/out/production/assignment2/Games/TinyGame/rooms.txt
+--- a/out/production/assignment2/Games/TinyGame/rooms.txt	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/Games/TinyGame/rooms.txt	(date 1701366887137)
+@@ -1,84 +1,92 @@
+ 1
+-Outside building
+-You are standing at the end of a road before a small brick building.  A small stream flows out of the building and down a gully to the south.  A road runs up a small hill to the west.
++Library
++You are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.
+ -----
+-WEST       2
+-UP         2
+-NORTH      3
+-IN         3
+-SOUTH      4
+-DOWN       4
++OUT         2
++NORTH       2
+ 
+ 2
+-End of road
+-You are at the end of a road at the top of a small hill. You can see a small building in the valley to the east.
++Hallway
++You are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.
+ -----
+-EAST       1
+-WEST       3
+-DOWN       3
++WEST        3
++EAST        4
++NORTH       5
++SOUTH       1
++DOWN        6
+ 
+ 3
+-Inside building
+-You are inside a building, a well house for a large spring. The exit door is to the south.  There is another room to the north, but the door is barred by a shimmering curtain.
++Son's Bedroom
++You are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.
+ -----
+-SOUTH      1
+-WEST       5
+-OUT        6/BIRD
+-OUT        1
+-NORTH     3
+-XYZZY     2/BOOK
+-XYZZY     1
+-PLUGH     2/BOOK
+-PLUGH     1
++OUT         2
++EAST        2
+ 
+ 4
+-Valley beside a stream
+-You are in a valley in the forest beside a stream tumbling along a rocky bed.  The stream is flowing to the south.
++Master Bedroom
++You are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.
++-----
++OUT         2
++WEST        2
++UP          7
++
++5
++Bathroom
++You are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.
+ -----
+-NORTH      1
+-UP         1
+-SOUTH      5
+-DOWN       5
+-WEST       5
++OUT         2
++SOUTH       2
+ 
+-5
+-Slit in rock
+-At your feet all the water of the stream splashes into a two-inch slit in the rock.  To the south, the streambed is bare rock.
++6
++Living Room
++You are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.
+ -----
+-NORTH      4
+-UP         4
+-SOUTH      6
+-DOWN       6
+-WEST       6
++WEST        8
++EAST        9
+ 
+-6
+-Curtain1
+-You are passing through a curtain!
++7
++Attic
++You are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.
+ -----
+-FORCED    7/BIRD
+-FORCED    9
++DOWN        4
++OUT         4
++FORCED      0
+ 
+-7
+-Curtain2
+-You are passing through another curtain!
++8
++Kitchen
++You are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.
+ -----
+-FORCED    8
++OUT         10
++WEST        10
++EAST        6
+ 
+-8
+-Curtain3
+-Yet another curtain here!
++9
++Office
++You are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.
+ -----
+-FORCED    10
++OUT         6
++WEST        6
+ 
+-9
+-Missing Treasures
+-You can pass through this curtain only if you're carrying all the treasures.  You don't yet have all of them.
++10
++Backyard
++You are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.
+ -----
+-FORCED     3
++IN          8
++DOWN        11
++WEST        11
+ 
+-10
+-Victory
+-You have collected all the treasures and are admitted to the Adventurer's Hall of Fame.  Congratulations!
++11
++Basement
++You are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.
+ -----
+-FORCED     0
++UP          10
++OUT         10
++NORTH       12
++FORCED      0
+ 
++12
++Billiard Room
++You are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.
++-----
++OUT         11
++SOUTH       11
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/assignment2.iml	(date 1701366841017)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="assignment2" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: out/production/assignment2/.idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/.idea/misc.xml b/out/production/assignment2/.idea/misc.xml
+--- a/out/production/assignment2/.idea/misc.xml	(revision e67ac7bfcbf96802b143149b86a74814f524d8e2)
++++ b/out/production/assignment2/.idea/misc.xml	(date 1701366792802)
+@@ -1,4 +1,3 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ProjectRootManager" version="2" project-jdk-name="20" project-jdk-type="JavaSDK">
+     <output url="file://$PROJECT_DIR$/out" />
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701364059269)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch	(date 1701364059269)
@@ -0,0 +1,28 @@
+Index: assignment2/Games/TinyGame/rooms.txt
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>1\r\nLibrary\r\nYou are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.\r\n-----\r\nOUT         2\r\nNORTH       2\r\n\r\n2\r\nHallway\r\nYou are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.\r\n-----\r\nWEST        3\r\nEAST        4\r\nNORTH       5\r\nSOUTH       1\r\nDOWN        6\r\n\r\n3\r\nSon's Bedroom\r\nYou are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.\r\n-----\r\nOUT         2\r\nEAST        2\r\n\r\n4\r\nMaster Bedroom\r\nYou are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.\r\n-----\r\nOUT         2\r\nWEST        2\r\nUP          7\r\n\r\n5\r\nBathroom\r\nYou are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.\r\n-----\r\nOUT         2\r\nSOUTH       2\r\n\r\n6\r\nLiving Room\r\nYou are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.\r\n-----\r\nWEST        8\r\nEAST        9\r\n\r\n7\r\nAttic\r\nYou are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.\r\n-----\r\nDOWN        4\r\nOUT         4\r\nFORCED      ?\r\n\r\n8\r\nKitchen\r\nYou are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.\r\n-----\r\nOUT         10\r\nWEST        10\r\nEAST        6\r\n\r\n9\r\nOffice\r\nYou are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.\r\n-----\r\nOUT         6\r\nWEST        6\r\n\r\n10\r\nBackyard\r\nYou are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.\r\n-----\r\nIN          8\r\nDOWN        11\r\nWEST        11\r\n\r\n11\r\nBasement\r\nYou are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.\r\n-----\r\nUP          10\r\nOUT         10\r\nNORTH       12\r\nFORCED      ?\r\n\r\n12\r\nBilliard Room\r\nYou are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.\r\n-----\r\nOUT         11\r\nSOUTH       11\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2/Games/TinyGame/rooms.txt b/assignment2/Games/TinyGame/rooms.txt
+--- a/assignment2/Games/TinyGame/rooms.txt	
++++ b/assignment2/Games/TinyGame/rooms.txt	
+@@ -50,7 +50,7 @@
+ -----
+ DOWN        4
+ OUT         4
+-FORCED      ?
++FORCED      0
+ 
+ 8
+ Kitchen
+@@ -82,7 +82,7 @@
+ UP          10
+ OUT         10
+ NORTH       12
+-FORCED      ?
++FORCED      0
+ 
+ 12
+ Billiard Room
Index: out/production/assignment2/Games/TinyGame/clues.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/Games/TinyGame/clues.txt b/out/production/assignment2/Games/TinyGame/clues.txt
new file mode 100644
--- /dev/null	(date 1701398931620)
+++ b/out/production/assignment2/Games/TinyGame/clues.txt	(date 1701398931620)
@@ -0,0 +1,15 @@
+CLUE1
+A small strand of soft chestnut coloured hair is on the ground, a couple feet away from where the body was.
+1
+
+CLUE2
+A paper with the title "DIVORCE" are on the kitchen counter-top.
+8
+
+CLUE3
+A personal diary with an unknown author is found on the nightstand expressing the frustrations towards her husband.
+4
+
+CLUE4
+A pair of destroyed wedding rings is on the bathroom counter.
+5
\ No newline at end of file
Index: ../out/production/group_69/Games/TinyGame/help.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/Games/TinyGame/help.txt b/../out/production/group_69/Games/TinyGame/help.txt
new file mode 100644
--- /dev/null	(date 1696382567305)
+++ b/../out/production/group_69/Games/TinyGame/help.txt	(date 1696382567305)
@@ -0,0 +1,21 @@
+To play this game you must move between locations and interact with objects by typing one or two word commands.
+
+Some commands are motion commands.  These will move you from room to room. Motion commands include:
+
+UP, DOWN, EAST, WEST, NORTH, SOUTH
+
+Not all motions are possible in every room. In addition, some rooms may have "special" or "secret" motion commands.
+
+There are other action commands in the game. These include:
+
+COMMANDS: this will print the moves that are legal in a given room.
+HELP: this will display instructions
+INVENTORY: this will print your current inventory.
+LOOK: this will print the description for the current room.
+TAKE <object>: this will take an object from a room and place it in your inventory. Replace <object> with the name of the object to take.  The object must be present in the room in order to take it.
+DROP <object>: this will drop an object in your inventory. Replace <object> with the name of the object to drop. The object must be in your inventory to drop it.
+
+Some paths may be blocked.  To unblock a path you may need a specific object to be in your inventory.
+
+The game is over when your player reaches the VICTORY room, or when your player DIES.
+
Index: .idea/libraries/javafx_sdk_21.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/javafx_sdk_21.xml b/.idea/libraries/javafx_sdk_21.xml
new file mode 100644
--- /dev/null	(date 1701366339210)
+++ b/.idea/libraries/javafx_sdk_21.xml	(date 1701366339210)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="javafx-sdk-21">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$/../../javafx-sdk-21" />
+    </SOURCES>
+    <jarDirectory url="file://$PROJECT_DIR$/../../javafx-sdk-21" recursive="false" type="SOURCES" />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701394439597)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch	(date 1701394439597)
@@ -0,0 +1,57 @@
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.AdventureClue;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\nimport java.util.Objects;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"Group 69's New Adventure Game\");\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        } else if(text.equalsIgnoreCase(\"GUESS\")){\r\n        gridPane.requestFocus();\r\n        EndScreenView endscreen = new EndScreenView(this);\r\n        return;\r\n    }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        // if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            String clueString = this.model.getPlayer().getCurrentRoom().getClueString();\r\n            if (objectString != null && !objectString.isEmpty() && clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects and clues in this room:\\n\" + objectString + \"\\n\" + clueString);\r\n            else if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else if (clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nClues in this room:\\n\" + clueString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".jpeg\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        // implement the same thing above but for the clues but still append into the objectsInInventory and InRoom VBox\r\n        for (AdventureClue item : this.model.getPlayer().getCurrentRoom().cluesInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Clue.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeClue(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        // Do the same as above but for clues\r\n        for (AdventureClue item : this.model.getPlayer().clueInventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Clue Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropClue(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        // Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        //mediaPlayer = new MediaPlayer(sound);\r\n        //mediaPlayer.play();\r\n        //mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/views/AdventureGameView.java	(date 1701394194285)
+@@ -408,7 +408,7 @@
+     private void getRoomImage() {
+ 
+         int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();
+-        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".jpeg";
++        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".png";
+ 
+         Image roomImageFile = new Image(roomImage);
+         roomImageView = new ImageView(roomImageFile);
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"assignment2\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/out/production/assignment2/assignment2.iml	(date 1701394201916)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="assignment2" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"assignment2\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/assignment2.iml	(date 1701394205195)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="assignment2" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520410)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml	(date 1701704520410)
@@ -0,0 +1,9 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]" date="1701394447288" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 8:33 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: .idea/libraries/javafx_media.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/javafx_media.xml b/.idea/libraries/javafx_media.xml
new file mode 100644
--- /dev/null	(date 1701393967395)
+++ b/.idea/libraries/javafx_media.xml	(date 1701393967395)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="javafx.media">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="file://$PROJECT_DIR$" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: out/production/assignment2/.idea/libraries/javafx_sdk_21.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/libraries/javafx_sdk_21.xml b/out/production/assignment2/.idea/libraries/javafx_sdk_21.xml
new file mode 100644
--- /dev/null	(date 1701366339210)
+++ b/out/production/assignment2/.idea/libraries/javafx_sdk_21.xml	(date 1701366339210)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="javafx-sdk-21">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$/../../javafx-sdk-21" />
+    </SOURCES>
+    <jarDirectory url="file://$PROJECT_DIR$/../../javafx-sdk-21" recursive="false" type="SOURCES" />
+  </library>
+</component>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt b/../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt
new file mode 100644
--- /dev/null	(date 1700102103461)
+++ b/../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt	(date 1700102103461)
@@ -0,0 +1,17 @@
+Q=QUIT
+L=LOOK
+CATCH=TAKE
+RELEASE=DROP
+I=INVENTORY
+N=NORTH
+S=SOUTH
+E=EAST
+W=WEST
+U=UP
+D=DOWN
+BACK=OUT
+GOLD=NUGGET
+BAG=COINS
+NEST=EGGS
+BOTTLE=WATER
+GRAB=TAKE
Index: ../out/production/group_69/out/production/assignment2/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/modules.xml b/../out/production/group_69/out/production/assignment2/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1700102103376)
+++ b/../out/production/group_69/out/production/assignment2/.idea/modules.xml	(date 1700102103376)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/assignment2.iml" filepath="$PROJECT_DIR$/assignment2.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520388)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml	(date 1701704520388)
@@ -0,0 +1,9 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]" date="1701394205303" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 8:29 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml b/../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml
new file mode 100644
--- /dev/null	(date 1700102103375)
+++ b/../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml	(date 1700102103375)
@@ -0,0 +1,17 @@
+<component name="libraryTable">
+  <library name="junit.jupiter" type="repository">
+    <properties maven-id="org.junit.jupiter:junit-jupiter:5.9.0" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.0/junit-jupiter-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.0/junit-jupiter-api-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.0/junit-platform-commons-1.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.0/junit-jupiter-params-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.0/junit-jupiter-engine-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.0/junit-platform-engine-1.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701394193544)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch	(date 1701394193544)
@@ -0,0 +1,105 @@
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.AdventureClue;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\nimport java.util.Objects;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"Group 69's New Adventure Game\");\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        // if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            String clueString = this.model.getPlayer().getCurrentRoom().getClueString();\r\n            if (objectString != null && !objectString.isEmpty() && clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects and clues in this room:\\n\" + objectString + \"\\n\" + clueString);\r\n            else if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else if (clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nClues in this room:\\n\" + clueString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".jpeg\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        // implement the same thing above but for the clues but still append into the objectsInInventory and InRoom VBox\r\n        for (AdventureClue item : this.model.getPlayer().getCurrentRoom().cluesInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Clue.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeClue(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        // Do the same as above but for clues\r\n        for (AdventureClue item : this.model.getPlayer().clueInventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Clue Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropClue(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        mediaPlayer = new MediaPlayer(sound);\r\n        mediaPlayer.play();\r\n        mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/views/AdventureGameView.java	(date 1701394140680)
+@@ -404,7 +404,7 @@
+     private void getRoomImage() {
+ 
+         int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();
+-        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".jpeg";
++        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".png";
+ 
+         Image roomImageFile = new Image(roomImage);
+         roomImageView = new ImageView(roomImageFile);
+Index: out/production/assignment2/.idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/out/production/assignment2/.idea/libraries/javafx_swt.xml b/out/production/assignment2/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/out/production/assignment2/.idea/libraries/javafx_swt.xml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ /dev/null	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: .idea/libraries/javafx_swt.xml
+===================================================================
+diff --git a/.idea/libraries/javafx_swt.xml b/.idea/libraries/javafx_swt.xml
+deleted file mode 100644
+--- a/.idea/libraries/javafx_swt.xml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ /dev/null	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
+@@ -1,16 +0,0 @@
+-<component name="libraryTable">
+-  <library name="javafx-swt">
+-    <CLASSES>
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx-swt.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.base.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.controls.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.fxml.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.graphics.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.media.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.swing.jar!/" />
+-      <root url="jar://$USER_HOME$/Downloads/javafx-sdk-21/lib/javafx.web.jar!/" />
+-    </CLASSES>
+-    <JAVADOC />
+-    <SOURCES />
+-  </library>
+-</component>
+\ No newline at end of file
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/out/production/assignment2/assignment2.iml	(date 1701393967380)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"javafx-swt\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision 37c933444b9dd7bb4dc85f7624aece5f3ee5e3f4)
++++ b/assignment2.iml	(date 1701393967380)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="javafx-swt" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
Index: out/production/assignment2/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/workspace.xml b/out/production/assignment2/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1701704504477)
+++ b/out/production/assignment2/.idea/workspace.xml	(date 1701704504477)
@@ -0,0 +1,287 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/assignment2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/javafx_media.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/javafx_sdk_21.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/LoadView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/assignment2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/javafx_media.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/libraries/javafx_sdk_21.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_56_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_29_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureClue.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/Saved/2023.10.28.11.30.test7.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE1.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE2.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE3.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clueImages/CLUE4.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/clues.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/.gitkeep" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/BLACK_HAIR.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/BROKEN_GLASS.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/FOOTPRINT.jpeg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/GUN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/JOURNAL.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/KEY.jpeg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/KNIFE.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/PEN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/objectImages/POISONOUS_PLANT.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/.gitkeep" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/11.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/Games/TinyGame/room-images/12.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/views/EndScreenView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/out/production/assignment2/views/time.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/libraries/javafx_swt.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/libraries/junit_jupiter.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureGameApp.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureGame.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureLoader.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/AdventureObject.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Passage.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/PassageTable.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Player.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/AdventureModel/Room.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/BasicAdventureTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.23.22.10.59.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.23.22.27.10.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.24.20.51.50.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.26.20.10.test1.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.26.20.47.test2.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.21.test5.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.26.test6.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/2023.10.28.11.30.test7.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/Saved/SaveFileNameTextField" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/help.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/BIRD.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/BOOK.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/CHEST.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/JOURNAL.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/PEN.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objectImages/POISONOUS_PLANT.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/objects.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/11.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/12.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/room-images/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/rooms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain1-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain1-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain2-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain2-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain3-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/curtain3-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/end-of-road-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/end-of-road-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/inside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/inside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/missing-treasures-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/missing-treasures-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/outside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/outside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/slit-in-rock-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/slit-in-rock-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/valley-beside-a-stream-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/valley-beside-a-stream-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/victory-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/sounds/victory-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/Games/TinyGame/synonyms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/assignment2.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/libraries/javafx_swt.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/libraries/junit_jupiter.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.23.22.10.59.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.23.22.27.10.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.24.20.51.50.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.26.20.10.test1.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.26.20.47.test2.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.28.11.21.test5.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/2023.10.28.11.26.test6.ser" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/Saved/SaveFileNameTextField" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/help.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/BIRD.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/BOOK.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objectImages/CHEST.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/1.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/10.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/2.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/3.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/4.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/5.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/6.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/7.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/8.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/room-images/9.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/rooms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain1-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain1-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain2-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain2-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain3-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/curtain3-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/end-of-road-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/end-of-road-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/inside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/inside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/missing-treasures-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/missing-treasures-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/outside-building-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/outside-building-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/slit-in-rock-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/slit-in-rock-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/valley-beside-a-stream-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/valley-beside-a-stream-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/victory-long.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/sounds/victory-short.mp3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/Games/TinyGame/synonyms.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/out/production/assignment2/assignment2.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/AdventureGameView$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/AdventureGameView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/LoadView.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../out/production/group_69/views/SaveView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureGame.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureGame.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureLoader.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/AdventureModel/AdventureLoader.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/assignment2/views/AdventureGameView.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/views/AdventureGameView.java" beforeDir="false" afterPath="$PROJECT_DIR$/views/AdventureGameView.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$/.." value="End_Of_Game" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
+  <component name="ProjectId" id="2YsM1CdUcwICSbLZYbguqSL2oYO" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "Sound",
+    "last_opened_file_path": "C:/Users/Christian Kevin/CSC207/javafx-sdk-21/lib/javafx-swt.jar",
+    "project.structure.last.edited": "Libraries",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2"
+  }
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\AdventureModel" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame\objectImages" />
+      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2\Games\TinyGame\room-images" />
+    </key>
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="views" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="Unnamed" type="Application" factoryName="Application" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="AdventureGameApp" />
+      <module name="assignment2" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Users\Christian Kevin\CSC207\javafx-sdk-21\lib&quot; --add-modules javafx.controls,javafx.fxml,javafx.media" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a0bfff74-4c74-44a9-a4f1-94aa8a543a33" name="Changes" comment="" />
+      <created>1701309617314</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1701309617314</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: ../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt b/../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt
new file mode 100644
--- /dev/null	(date 1700102103407)
+++ b/../out/production/group_69/out/production/assignment2/Games/TinyGame/objects.txt	(date 1700102103407)
@@ -0,0 +1,11 @@
+BIRD
+a water bird
+1
+
+CHEST
+a pirate chest
+2
+
+BOOK
+a copy of an illuminated manuscript
+3
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701361170490)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM__Changes_.xml	(date 1701361170490)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]" date="1700156073658" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/16/2023 12:34 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/libraries/assignment2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/assignment2.xml b/.idea/libraries/assignment2.xml
new file mode 100644
--- /dev/null	(date 1701366841029)
+++ b/.idea/libraries/assignment2.xml	(date 1701366841029)
@@ -0,0 +1,18 @@
+<component name="libraryTable">
+  <library name="assignment2">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1700156088413)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]/shelved.patch	(date 1700156088413)
@@ -0,0 +1,65 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"fedfccc0-a8f7-4125-8f44-9f21308d5468\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 3\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2XcsqGvsbJb9uJESxbJBFXvpEZT\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"last_opened_file_path\": \"/Users/sehajdhillon/Desktop/Group Project/group_69\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"fedfccc0-a8f7-4125-8f44-9f21308d5468\" name=\"Changes\" comment=\"\" />\r\n      <created>1698939892849</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698939892849</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	
++++ b/.idea/workspace.xml	
+@@ -1,7 +1,15 @@
+ <?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
++  <component name="AutoImportSettings">
++    <option name="autoReloadType" value="SELECTIVE" />
++  </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="fedfccc0-a8f7-4125-8f44-9f21308d5468" name="Changes" comment="" />
++    <list default="true" id="fedfccc0-a8f7-4125-8f44-9f21308d5468" name="Changes" comment="">
++      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/BIRD.jpg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/BOOK.jpg" beforeDir="false" />
++      <change beforePath="$PROJECT_DIR$/assignment2/Games/TinyGame/objectImages/CHEST.jpg" beforeDir="false" />
++    </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+@@ -10,22 +18,27 @@
+   <component name="Git.Settings">
+     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+   </component>
+-  <component name="ProjectColorInfo"><![CDATA[{
+-  "associatedIndex": 3
+-}]]></component>
++  <component name="ProjectColorInfo">{
++  &quot;associatedIndex&quot;: 3
++}</component>
+   <component name="ProjectId" id="2XcsqGvsbJb9uJESxbJBFXvpEZT" />
+   <component name="ProjectViewState">
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent"><![CDATA[{
+-  "keyToString": {
+-    "RunOnceActivity.OpenProjectViewOnStart": "true",
+-    "RunOnceActivity.ShowReadmeOnStart": "true",
+-    "git-widget-placeholder": "main",
+-    "last_opened_file_path": "/Users/sehajdhillon/Desktop/Group Project/group_69"
++  <component name="PropertiesComponent">{
++  &quot;keyToString&quot;: {
++    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
++    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
++    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
++    &quot;last_opened_file_path&quot;: &quot;C:/Users/Christian Kevin/CSC207/group_69&quot;
+   }
+-}]]></component>
++}</component>
++  <component name="RecentsManager">
++    <key name="MoveFile.RECENT_KEYS">
++      <recent name="C:\Users\Christian Kevin\CSC207\group_69\assignment2" />
++    </key>
++  </component>
+   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+   <component name="TaskManager">
+     <task active="true" id="Default" summary="Default task">
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1701364060359)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_1.xml	(date 1701364060359)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1" date="1701364059294" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 12:07 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/misc.xml b/../out/production/group_69/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1701309473254)
+++ b/../out/production/group_69/.idea/misc.xml	(date 1701309473254)
@@ -0,0 +1,5 @@
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701704520419)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_.xml	(date 1701704520419)
@@ -0,0 +1,14 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]" date="1701398909280" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 9:48 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView$1.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1701364060341)
+++ b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM__Changes_.xml	(date 1701364060341)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]" date="1701364043870" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_12_07_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 12:07 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1701704520441)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml	(date 1701704520441)
@@ -0,0 +1,14 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1" date="1701398931693" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 9:48 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView$1.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/Games/TinyGame/objects.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/Games/TinyGame/objects.txt b/../out/production/group_69/Games/TinyGame/objects.txt
new file mode 100644
--- /dev/null	(date 1696382567309)
+++ b/../out/production/group_69/Games/TinyGame/objects.txt	(date 1696382567309)
@@ -0,0 +1,11 @@
+BIRD
+a water bird
+1
+
+CHEST
+a pirate chest
+2
+
+BOOK
+a copy of an illuminated manuscript
+3
\ No newline at end of file
Index: ../out/production/group_69/Games/TinyGame/rooms.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/Games/TinyGame/rooms.txt b/../out/production/group_69/Games/TinyGame/rooms.txt
new file mode 100644
--- /dev/null	(date 1701310462254)
+++ b/../out/production/group_69/Games/TinyGame/rooms.txt	(date 1701310462254)
@@ -0,0 +1,92 @@
+1
+Library
+You are in an enormous library with lots of books on shelves. The room has comfy chairs and sofas where people can sit and read. There's a fireplace that keeps the room warm. Some tables have maps and old scrolls on them. The walls have pictures of famous writers. The room is quiet; too quite perhaps.
+-----
+OUT         2
+NORTH       2
+
+2
+Hallway
+You are in a spacious hallway with marbled floors on one side and ornate wood panels on the other. Tapestry-lined walls soften the space, while the white noise hints at a lack of life. There are stairs offscreen leading to the first floor.
+-----
+WEST        3
+EAST        4
+NORTH       5
+SOUTH       1
+DOWN        6
+
+3
+Son's Bedroom
+You are in the Mayor's sons bedroom. Posters decorate the walls, and the textures vary from smooth paper to rough canvas. The floor is carpeted, soft underfoot, and scattered with the occasional crunch of clothes. There's a faint hum of electronics implying his computer is still on.
+-----
+OUT         2
+EAST        2
+
+4
+Master Bedroom
+You are in the master bedroom. A plush carpet welcomes each step, contrasting with the smooth wooden floorboards near the windows. The air carries a hint of lavender, subtle and calming. A king-sized bed sits at the room's center, its soft comforter inviting relaxation. A secret passage in the closet leads to the attic.
+-----
+OUT         2
+WEST        2
+UP          7
+
+5
+Bathroom
+You are in the bathroom. Cool tiles meet your feet, their smooth surface contrasting with the warmth of the bath mat. The air carries the clean scent of soap and hints of a recently used fragrance. The space is serene, with only the faint echo of your own movements breaking the tranquility.
+-----
+OUT         2
+SOUTH       2
+
+6
+Living Room
+You are in the living room. The soft carpet contrasts with polished wooden floors. Sunlight filters in, casting warmth across the space. Familiar scents linger in the air, while the quiet hum of electronics adds a subtle rhythm.
+-----
+WEST        8
+EAST        9
+
+7
+Attic
+You are in the attic. Weathered floorboards creak softly underfoot, their texture uneven but familiar. Dust motes dance in the sunlight streaming through a small window. The air holds a distinct scent of aged wood and forgotten memories. Silence reigns, broken only by the occasional scuffles of mice or flies.
+-----
+DOWN        4
+OUT         4
+FORCED      0
+
+8
+Kitchen
+You are in the kitchen. Cool tiles line the floor, smooth underfoot. The air carries traces of freshly cooked meals and hints of spices. Cabinets occasionally creak open, releasing the faint scent of polished wood. A sliding door leads to the backyard.
+-----
+OUT         10
+WEST        10
+EAST        6
+
+9
+Office
+You are in the office. A carpeted floor muffles footsteps, contrasting with the smooth surface of the desk. The air holds the faint scent of paper and ink. Silence dominates, and the room exudes a sense of focused productivity.
+-----
+OUT         6
+WEST        6
+
+10
+Backyard
+You are in the backyard. Grass crunches beneath your feet, varying in texture. Birdsong and rustling leaves create a symphony of nature, while the occasional distant sound of a passing car hints at the world beyond. To the west of you, a trap door leads down into the basement.
+-----
+IN          8
+DOWN        11
+WEST        11
+
+11
+Basement
+You are in the basement. The wooden floors feel cold and solid. The air is cool and carries a faint hint of mustiness. There is a room directly to your north, and an unfinished room to the south.
+-----
+UP          10
+OUT         10
+NORTH       12
+FORCED      0
+
+12
+Billiard Room
+You are in the billiard room. A smooth, felted surface covers the table, its texture distinct under your fingertips. The air carries a faint scent of chalk and leather from cue sticks. A relaxed, focused atmosphere pervades, perfect for a game and conversation.
+-----
+OUT         11
+SOUTH       11
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1701704520441)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM__Changes_1.xml	(date 1701704520441)
@@ -0,0 +1,14 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1" date="1701398931693" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 11/30/2023 9:48 PM [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView$1.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView$1.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="AFTER_PATH" value="out/production/assignment2/views/AdventureGameView.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/AdventureGameView.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: ../out/production/group_69/.idea/libraries/junit_jupiter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../out/production/group_69/.idea/libraries/junit_jupiter.xml b/../out/production/group_69/.idea/libraries/junit_jupiter.xml
new file mode 100644
--- /dev/null	(date 1700102103281)
+++ b/../out/production/group_69/.idea/libraries/junit_jupiter.xml	(date 1700102103281)
@@ -0,0 +1,17 @@
+<component name="libraryTable">
+  <library name="junit.jupiter" type="repository">
+    <properties maven-id="org.junit.jupiter:junit-jupiter:5.9.0" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.0/junit-jupiter-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.0/junit-jupiter-api-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.0/junit-platform-commons-1.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.0/junit-jupiter-params-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.0/junit-jupiter-engine-5.9.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.0/junit-platform-engine-1.9.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: out/production/assignment2/.idea/libraries/javafx_media.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/libraries/javafx_media.xml b/out/production/assignment2/.idea/libraries/javafx_media.xml
new file mode 100644
--- /dev/null	(date 1701393967395)
+++ b/out/production/assignment2/.idea/libraries/javafx_media.xml	(date 1701393967395)
@@ -0,0 +1,19 @@
+<component name="libraryTable">
+  <library name="javafx.media">
+    <CLASSES>
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.media.jar!/" />
+      <root url="file://$PROJECT_DIR$" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.web.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.controls.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.swing.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.base.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.graphics.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx.fxml.jar!/" />
+      <root url="jar://$PROJECT_DIR$/../../javafx-sdk-21/lib/javafx-swt.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="file://$PROJECT_DIR$" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1701394439597)
+++ b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_8_33_PM_[Changes]/shelved.patch	(date 1701394439597)
@@ -0,0 +1,57 @@
+Index: views/AdventureGameView.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package views;\r\n\r\nimport AdventureModel.AdventureGame;\r\nimport AdventureModel.AdventureObject;\r\nimport AdventureModel.AdventureClue;\r\nimport AdventureModel.Passage;\r\nimport javafx.animation.PauseTransition;\r\nimport javafx.application.Platform;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.input.KeyEvent; //you will need these!\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.util.Duration;\r\nimport javafx.event.EventHandler; //you will need this too!\r\nimport javafx.scene.AccessibleRole;\r\n\r\nimport java.io.File;\r\nimport java.util.Objects;\r\n\r\n/**\r\n * Class AdventureGameView.\r\n *\r\n * This is the Class that will visualize your model.\r\n * You are asked to demo your visualization via a Zoom\r\n * recording. Place a link to your recording below.\r\n *\r\n * ZOOM LINK: https://drive.google.com/file/d/15rqSZpYpOd5PUS0MR_xkQ6Zvjd8pcTNK/view?usp=sharing\r\n * PASSWORD: There is no password required to access\r\n */\r\npublic class AdventureGameView {\r\n\r\n    AdventureGame model; //model of the game\r\n    Stage stage; //stage on which all is rendered\r\n    Button saveButton, loadButton, helpButton; //buttons\r\n    Boolean helpToggle = false; //is help on display?\r\n\r\n    GridPane gridPane = new GridPane(); //to hold images and buttons\r\n    Label roomDescLabel = new Label(); //to hold room description and/or instructions\r\n    VBox objectsInRoom = new VBox(); //to hold room items\r\n    VBox objectsInInventory = new VBox(); //to hold inventory items\r\n    ImageView roomImageView; //to hold room image\r\n    TextField inputTextField; //for user input\r\n\r\n    private MediaPlayer mediaPlayer; //to play audio\r\n    private boolean mediaPlaying; //to know if the audio is playing\r\n    private VBox instructionBox; //to showcase instructions on screen\r\n\r\n    /**\r\n     * Adventure Game View Constructor\r\n     * __________________________\r\n     * Initializes attributes\r\n     */\r\n    public AdventureGameView(AdventureGame model, Stage stage) {\r\n        this.model = model;\r\n        this.stage = stage;\r\n        intiUI();\r\n    }\r\n\r\n    /**\r\n     * Initialize the UI\r\n     */\r\n    public void intiUI() {\r\n\r\n        // setting up the stage\r\n        this.stage.setTitle(\"Group 69's New Adventure Game\");\r\n\r\n        //Inventory + Room items\r\n        objectsInInventory.setSpacing(10);\r\n        objectsInInventory.setAlignment(Pos.TOP_CENTER);\r\n        objectsInRoom.setSpacing(10);\r\n        objectsInRoom.setAlignment(Pos.TOP_CENTER);\r\n\r\n        // GridPane, anyone?\r\n        gridPane.setPadding(new Insets(20));\r\n        gridPane.setBackground(new Background(new BackgroundFill(\r\n                Color.valueOf(\"#000000\"),\r\n                new CornerRadii(0),\r\n                new Insets(0)\r\n        )));\r\n\r\n        //Three columns, three rows for the GridPane\r\n        ColumnConstraints column1 = new ColumnConstraints(150);\r\n        ColumnConstraints column2 = new ColumnConstraints(650);\r\n        ColumnConstraints column3 = new ColumnConstraints(150);\r\n        column3.setHgrow( Priority.SOMETIMES ); //let some columns grow to take any extra space\r\n        column1.setHgrow( Priority.SOMETIMES );\r\n\r\n        // Row constraints\r\n        RowConstraints row1 = new RowConstraints();\r\n        RowConstraints row2 = new RowConstraints( 550 );\r\n        RowConstraints row3 = new RowConstraints();\r\n        row1.setVgrow( Priority.SOMETIMES );\r\n        row3.setVgrow( Priority.SOMETIMES );\r\n\r\n        gridPane.getColumnConstraints().addAll( column1 , column2 , column1 );\r\n        gridPane.getRowConstraints().addAll( row1 , row2 , row1 );\r\n\r\n        // Buttons\r\n        saveButton = new Button(\"Save\");\r\n        saveButton.setId(\"Save\");\r\n        customizeButton(saveButton, 100, 50);\r\n        makeButtonAccessible(saveButton, \"Save Button\", \"This button saves the game.\", \"This button saves the game. Click it in order to save your current progress, so you can play more later.\");\r\n        addSaveEvent();\r\n\r\n        loadButton = new Button(\"Load\");\r\n        loadButton.setId(\"Load\");\r\n        customizeButton(loadButton, 100, 50);\r\n        makeButtonAccessible(loadButton, \"Load Button\", \"This button loads a game from a file.\", \"This button loads the game from a file. Click it in order to load a game that you saved at a prior date.\");\r\n        addLoadEvent();\r\n\r\n        helpButton = new Button(\"Instructions\");\r\n        helpButton.setId(\"Instructions\");\r\n        customizeButton(helpButton, 200, 50);\r\n        makeButtonAccessible(helpButton, \"Help Button\", \"This button gives game instructions.\", \"This button gives instructions on the game controls. Click it to learn how to play.\");\r\n        addInstructionEvent();\r\n\r\n        HBox topButtons = new HBox();\r\n        topButtons.getChildren().addAll(saveButton, helpButton, loadButton);\r\n        topButtons.setSpacing(10);\r\n        topButtons.setAlignment(Pos.CENTER);\r\n\r\n        inputTextField = new TextField();\r\n        inputTextField.setFont(new Font(\"Arial\", 16));\r\n        inputTextField.setFocusTraversable(true);\r\n\r\n        inputTextField.setAccessibleRole(AccessibleRole.TEXT_AREA);\r\n        inputTextField.setAccessibleRoleDescription(\"Text Entry Box\");\r\n        inputTextField.setAccessibleText(\"Enter commands in this box.\");\r\n        inputTextField.setAccessibleHelp(\"This is the area in which you can enter commands you would like to play.  Enter a command and hit return to continue.\");\r\n        addTextHandlingEvent(); //attach an event to this input field\r\n\r\n        //labels for inventory and room items\r\n        Label objLabel =  new Label(\"Objects in Room\");\r\n        objLabel.setAlignment(Pos.CENTER);\r\n        objLabel.setStyle(\"-fx-text-fill: white;\");\r\n        objLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        Label invLabel =  new Label(\"Your Inventory\");\r\n        invLabel.setAlignment(Pos.CENTER);\r\n        invLabel.setStyle(\"-fx-text-fill: white;\");\r\n        invLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        //add all the widgets to the GridPane\r\n        gridPane.add( objLabel, 0, 0, 1, 1 );  // Add label\r\n        gridPane.add( topButtons, 1, 0, 1, 1 );  // Add buttons\r\n        gridPane.add( invLabel, 2, 0, 1, 1 );  // Add label\r\n\r\n        Label commandLabel = new Label(\"What would you like to do?\");\r\n        commandLabel.setStyle(\"-fx-text-fill: white;\");\r\n        commandLabel.setFont(new Font(\"Arial\", 16));\r\n\r\n        updateScene(\"\"); //method displays an image and whatever text is supplied\r\n        updateItems(); //update items shows inventory and objects in rooms\r\n\r\n        // adding the text area and submit button to a VBox\r\n        VBox textEntry = new VBox();\r\n        textEntry.setStyle(\"-fx-background-color: #000000;\");\r\n        textEntry.setPadding(new Insets(20, 20, 20, 20));\r\n        textEntry.getChildren().addAll(commandLabel, inputTextField);\r\n        textEntry.setSpacing(10);\r\n        textEntry.setAlignment(Pos.CENTER);\r\n        gridPane.add( textEntry, 0, 2, 3, 1 );\r\n\r\n        // Render everything\r\n        var scene = new Scene( gridPane ,  1000, 800);\r\n        scene.setFill(Color.BLACK);\r\n        this.stage.setScene(scene);\r\n        this.stage.setResizable(false);\r\n        this.stage.show();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * makeButtonAccessible\r\n     * __________________________\r\n     * For information about ARIA standards, see\r\n     * https://www.w3.org/WAI/standards-guidelines/aria/\r\n     *\r\n     * @param inputButton the button to add screenreader hooks to\r\n     * @param name ARIA name\r\n     * @param shortString ARIA accessible text\r\n     * @param longString ARIA accessible help text\r\n     */\r\n    public static void makeButtonAccessible(Button inputButton, String name, String shortString, String longString) {\r\n        inputButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n        inputButton.setAccessibleRoleDescription(name);\r\n        inputButton.setAccessibleText(shortString);\r\n        inputButton.setAccessibleHelp(longString);\r\n        inputButton.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * customizeButton\r\n     * __________________________\r\n     *\r\n     * @param inputButton the button to make stylish :)\r\n     * @param w width\r\n     * @param h height\r\n     */\r\n    private void customizeButton(Button inputButton, int w, int h) {\r\n        inputButton.setPrefSize(w, h);\r\n        inputButton.setFont(new Font(\"Arial\", 16));\r\n        inputButton.setStyle(\"-fx-background-color: #17871b; -fx-text-fill: white;\");\r\n    }\r\n\r\n    /**\r\n     * addTextHandlingEvent\r\n     * __________________________\r\n     * Add an event handler to the myTextField attribute \r\n     *\r\n     * Your event handler should respond when users \r\n     * hits the ENTER or TAB KEY. If the user hits \r\n     * the ENTER Key, strip white space from the\r\n     * input to inputTextField and pass the stripped\r\n     * string to submitEvent for processing.\r\n     *\r\n     * If the user hits the TAB key, move the focus \r\n     * of the scene onto any other node in the scene \r\n     * graph by invoking requestFocus method.\r\n     */\r\n    private void addTextHandlingEvent() {\r\n        // Implementing an event handler\r\n\r\n        inputTextField.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle (KeyEvent keyEvent) {\r\n                // Check whether the event is 'enter' or 'tab'\r\n                if (keyEvent.getCode() == KeyCode.ENTER) {\r\n                    // Obtain the text the user inputted\r\n                    String text = inputTextField.getText();\r\n\r\n                    // Pass the stripped text to submitEvent\r\n                    text = text.strip();\r\n                    submitEvent(text);\r\n\r\n                    // Clear the users input\r\n                    inputTextField.clear();\r\n\r\n                } else if (keyEvent.getCode() == KeyCode.TAB) {\r\n                    // Move focus onto something else\r\n                    gridPane.requestFocus();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * submitEvent\r\n     * __________________________\r\n     *\r\n     * @param text the command that needs to be processed\r\n     */\r\n    private void submitEvent(String text) {\r\n\r\n        text = text.strip(); //get rid of white space\r\n        stopArticulation(); //if speaking, stop\r\n\r\n        if (text.equalsIgnoreCase(\"HELP\") || text.equalsIgnoreCase(\"H\")) {\r\n            showInstructions();\r\n            return;\r\n        } else if (text.equalsIgnoreCase(\"COMMANDS\") || text.equalsIgnoreCase(\"C\")) {\r\n            showCommands(); //this is new!  We did not have this command in A1\r\n            return;\r\n        } else if(text.equalsIgnoreCase(\"GUESS\")){\r\n        gridPane.requestFocus();\r\n        EndScreenView endscreen = new EndScreenView(this);\r\n        return;\r\n    }\r\n\r\n        //try to move!\r\n        String output = this.model.interpretAction(text); //process the command!\r\n\r\n        if (output == null || (!output.equals(\"GAME OVER\") && !output.equals(\"FORCED\") && !output.equals(\"HELP\"))) {\r\n            updateScene(output);\r\n            updateItems();\r\n        } else if (output.equals(\"GAME OVER\")) {\r\n            updateScene(\"\");\r\n            updateItems();\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(10));\r\n            pause.setOnFinished(event -> {\r\n                Platform.exit();\r\n            });\r\n            pause.play();\r\n        } else if (output.equals(\"FORCED\")) {\r\n            PauseTransition pause = new PauseTransition(Duration.seconds(5));\r\n            String forcedEvent = \"FORCED\";\r\n\r\n            // Check if the possible rooms have forced options\r\n            if (model.getPlayer().getCurrentRoom().getMotionTable().optionExists(forcedEvent)) {\r\n\r\n                updateItems();\r\n                updateScene(\"\");\r\n\r\n                pause.setOnFinished(event -> {\r\n                    // Check for forced statements again in the next rooms\r\n                    submitEvent(forcedEvent);\r\n                });\r\n                pause.play();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * showCommands\r\n     * __________________________\r\n     *\r\n     * update the text in the GUI (within roomDescLabel)\r\n     * to show all the moves that are possible from the \r\n     * current room.\r\n     */\r\n    private void showCommands() {\r\n        // Set commands of current room in a Label\r\n        String roomCommands = \"You can move in these directions:\" + \"\\n\"  + \"\\n\" + this.model.player.getCurrentRoom().getCommands();\r\n        Label roomCommandsLabel = new Label();\r\n        roomCommandsLabel.setText(roomCommands);\r\n        roomCommandsLabel.setTextFill(Color.color(1,1,1));\r\n\r\n        // Remove the current VBox from the GUI\r\n        VBox oldRoomPane = new VBox(roomImageView,roomDescLabel);\r\n        gridPane.getChildren().remove(oldRoomPane);\r\n\r\n        // Create a new VBox including the image and commands and then add to the GUI\r\n        VBox roomPane = new VBox(roomImageView,roomCommandsLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * updateScene\r\n     * __________________________\r\n     *\r\n     * Show the current room, and print some text below it.\r\n     * If the input parameter is not null, it will be displayed\r\n     * below the image.\r\n     * Otherwise, the current room description will be dispplayed\r\n     * below the image.\r\n     * \r\n     * @param textToDisplay the text to display below the image.\r\n     */\r\n    public void updateScene(String textToDisplay) {\r\n\r\n        getRoomImage(); //get the image of the current room\r\n        formatText(textToDisplay); //format the text to display\r\n        roomDescLabel.setPrefWidth(500);\r\n        roomDescLabel.setPrefHeight(500);\r\n        roomDescLabel.setTextOverrun(OverrunStyle.CLIP);\r\n        roomDescLabel.setWrapText(true);\r\n        VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n        roomPane.setPadding(new Insets(10));\r\n        roomPane.setAlignment(Pos.TOP_CENTER);\r\n        roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n        gridPane.add(roomPane, 1, 1);\r\n        stage.sizeToScene();\r\n\r\n        //finally, articulate the description\r\n        // if (textToDisplay == null || textToDisplay.isBlank()) articulateRoomDescription();\r\n    }\r\n\r\n    /**\r\n     * formatText\r\n     * __________________________\r\n     *\r\n     * Format text for display.\r\n     * \r\n     * @param textToDisplay the text to be formatted for display.\r\n     */\r\n    private void formatText(String textToDisplay) {\r\n        if (textToDisplay == null || textToDisplay.isBlank()) {\r\n            String roomDesc = this.model.getPlayer().getCurrentRoom().getRoomDescription() + \"\\n\";\r\n            String objectString = this.model.getPlayer().getCurrentRoom().getObjectString();\r\n            String clueString = this.model.getPlayer().getCurrentRoom().getClueString();\r\n            if (objectString != null && !objectString.isEmpty() && clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects and clues in this room:\\n\" + objectString + \"\\n\" + clueString);\r\n            else if (objectString != null && !objectString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nObjects in this room:\\n\" + objectString);\r\n            else if (clueString != null && !clueString.isEmpty()) roomDescLabel.setText(roomDesc + \"\\n\\nClues in this room:\\n\" + clueString);\r\n            else roomDescLabel.setText(roomDesc);\r\n        } else roomDescLabel.setText(textToDisplay);\r\n        roomDescLabel.setStyle(\"-fx-text-fill: white;\");\r\n        roomDescLabel.setFont(new Font(\"Arial\", 16));\r\n        roomDescLabel.setAlignment(Pos.CENTER);\r\n    }\r\n\r\n    /**\r\n     * getRoomImage\r\n     * __________________________\r\n     *\r\n     * Get the image for the current room and place \r\n     * it in the roomImageView \r\n     */\r\n    private void getRoomImage() {\r\n\r\n        int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();\r\n        String roomImage = this.model.getDirectoryName() + \"/room-images/\" + roomNumber + \".jpeg\";\r\n\r\n        Image roomImageFile = new Image(roomImage);\r\n        roomImageView = new ImageView(roomImageFile);\r\n        roomImageView.setPreserveRatio(true);\r\n        roomImageView.setFitWidth(400);\r\n        roomImageView.setFitHeight(400);\r\n\r\n        //set accessible text\r\n        roomImageView.setAccessibleRole(AccessibleRole.IMAGE_VIEW);\r\n        roomImageView.setAccessibleText(this.model.getPlayer().getCurrentRoom().getRoomDescription());\r\n        roomImageView.setFocusTraversable(true);\r\n    }\r\n\r\n    /**\r\n     * updateItems\r\n     * __________________________\r\n     *\r\n     * This method is partially completed, but you are asked to finish it off.\r\n     *\r\n     * The method should populate the objectsInRoom and objectsInInventory Vboxes.\r\n     * Each Vbox should contain a collection of nodes (Buttons, ImageViews, you can decide)\r\n     * Each node represents a different object.\r\n     * \r\n     * Images of each object are in the assets \r\n     * folders of the given adventure game.\r\n     */\r\n    public void updateItems() {\r\n\r\n        // Empty the two VBOX inventory's since they're going to be added back in the for loops\r\n        objectsInRoom.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a given room to the objectsInRoom Vbox\r\n        for (AdventureObject item : this.model.getPlayer().getCurrentRoom().objectsInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeObject(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n        // implement the same thing above but for the clues but still append into the objectsInInventory and InRoom VBox\r\n        for (AdventureClue item : this.model.getPlayer().getCurrentRoom().cluesInRoom) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Room Clue.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().takeClue(item.getName());\r\n                updateItems();\r\n                objectsInRoom.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInRoom.getChildren().add(itemButton);\r\n        }\r\n\r\n\r\n        objectsInInventory.getChildren().clear();\r\n\r\n        //write some code here to add images of objects in a player's inventory room to the objectsInInventory Vbox\r\n        //please use setAccessibleText to add \"alt\" descriptions to your images!\r\n        for (AdventureObject item : this.model.getPlayer().inventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Inventory Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropObject(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/objectImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n        // Do the same as above but for clues\r\n        for (AdventureClue item : this.model.getPlayer().clueInventory) {\r\n\r\n            Button itemButton = new Button();\r\n            itemButton.setAccessibleRole(AccessibleRole.BUTTON);\r\n            itemButton.setAccessibleRoleDescription(\"Clue Item.\");\r\n            itemButton.setAccessibleText(item.getDescription());\r\n            itemButton.setOnAction(e -> {\r\n                this.model.getPlayer().dropClue(item.getName());\r\n                updateItems();\r\n                objectsInInventory.getChildren().remove(itemButton);\r\n            });\r\n\r\n            // Now load the image\r\n            String imagePath = model.getDirectoryName() + \"/clueImages/\" + item.getName() + \".jpg\";\r\n            Image itemImage = new Image(new File(imagePath).toURI().toString());\r\n            ImageView imageView = new ImageView(itemImage);\r\n            imageView.setFitWidth(100);\r\n            imageView.setPreserveRatio(true);\r\n\r\n            // Add the name of the object under its photo\r\n            Label imageLabel = new Label(item.getName());\r\n            imageLabel.setStyle(\"-fx-text-fill: black;\");\r\n            imageLabel.setWrapText(true);\r\n            imageLabel.setPrefSize(100,10);\r\n            VBox imageBox = new VBox();\r\n            imageBox.getChildren().addAll(imageView, imageLabel);\r\n            imageBox.setAlignment(Pos.TOP_CENTER);\r\n\r\n            itemButton.setGraphic(imageBox);\r\n\r\n            objectsInInventory.getChildren().add(itemButton);\r\n\r\n        }\r\n\r\n\r\n        //the path to the image of any is as follows:\r\n        //this.model.getDirectoryName() + \"/objectImages/\" + objectName + \".jpg\";\r\n\r\n        ScrollPane scO = new ScrollPane(objectsInRoom);\r\n        scO.setPadding(new Insets(10));\r\n        scO.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        scO.setFitToWidth(true);\r\n        gridPane.add(scO,0,1);\r\n\r\n        ScrollPane scI = new ScrollPane(objectsInInventory);\r\n        scI.setFitToWidth(true);\r\n        scI.setStyle(\"-fx-background: #000000; -fx-background-color:transparent;\");\r\n        gridPane.add(scI,2,1);\r\n    }\r\n\r\n    /*\r\n     * Show the game instructions.\r\n     *\r\n     * If helpToggle is FALSE:\r\n     * -- display the help text in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- use whatever GUI elements to get the job done!\r\n     * -- set the helpToggle to TRUE\r\n     * -- REMOVE whatever nodes are within the cell beforehand!\r\n     *\r\n     * If helpToggle is TRUE:\r\n     * -- redraw the room image in the CENTRE of the gridPane (i.e. within cell 1,1)\r\n     * -- set the helpToggle to FALSE\r\n     * -- Again, REMOVE whatever nodes are within the cell beforehand!\r\n     */\r\n    public void showInstructions() {\r\n\r\n        if (helpToggle) { // If helpToggle is True\r\n            helpToggle = false;\r\n\r\n            // Copied from other methods\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n            roomPane.setPadding(new Insets(10));\r\n            roomPane.setAlignment(Pos.TOP_CENTER);\r\n            roomPane.setStyle(\"-fx-background-color: #000000;\");\r\n\r\n            // Since it was true, it means there was a VBOX there\r\n            // Remove whatever was in 1,1\r\n            gridPane.getChildren().remove(instructionBox);\r\n            gridPane.add(roomPane, 1, 1);\r\n\r\n        } else { // If false\r\n            helpToggle = true;\r\n            instructionBox = new VBox();\r\n            VBox roomPane = new VBox(roomImageView,roomDescLabel);\r\n\r\n            // Displaying the help text by creating a VBOX\r\n            instructionBox.setAlignment(Pos.CENTER);\r\n\r\n            // Text area to display the instructions in the VBOX\r\n            TextArea instructionText = new TextArea();\r\n            instructionText.setWrapText(true);\r\n\r\n            instructionText.setFont(new Font(\"Arial\", 12));\r\n            instructionText.setPrefSize(400, 350);\r\n            instructionText.setFocusTraversable(true); // makes it scrollable\r\n            instructionText.setText(this.model.getInstructions());\r\n\r\n            // Add text into VBOX\r\n            instructionBox.getChildren().add(instructionText);\r\n\r\n            // Clear existing content in 1,1 and add the VBOX there\r\n            gridPane.getChildren().remove(roomPane);\r\n            gridPane.add(instructionBox, 1, 1);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * help button.\r\n     */\r\n    public void addInstructionEvent() {\r\n        helpButton.setOnAction(e -> {\r\n            stopArticulation(); //if speaking, stop\r\n            showInstructions();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * save button.\r\n     */\r\n    public void addSaveEvent() {\r\n        saveButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            SaveView saveView = new SaveView(this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method handles the event related to the\r\n     * load button.\r\n     */\r\n    public void addLoadEvent() {\r\n        loadButton.setOnAction(e -> {\r\n            gridPane.requestFocus();\r\n            LoadView loadView = new LoadView(this);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * This method articulates Room Descriptions\r\n     */\r\n    public void articulateRoomDescription() {\r\n        String musicFile;\r\n        String adventureName = this.model.getDirectoryName();\r\n        String roomName = this.model.getPlayer().getCurrentRoom().getRoomName();\r\n\r\n        if (!this.model.getPlayer().getCurrentRoom().getVisited()) musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-long.mp3\" ;\r\n        else musicFile = \"./\" + adventureName + \"/sounds/\" + roomName.toLowerCase() + \"-short.mp3\" ;\r\n        musicFile = musicFile.replace(\" \",\"-\");\r\n\r\n        // Media sound = new Media(new File(musicFile).toURI().toString());\r\n\r\n        //mediaPlayer = new MediaPlayer(sound);\r\n        //mediaPlayer.play();\r\n        //mediaPlaying = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * This method stops articulations \r\n     * (useful when transitioning to a new room or loading a new game)\r\n     */\r\n    public void stopArticulation() {\r\n        if (mediaPlaying) {\r\n            mediaPlayer.stop(); //shush!\r\n            mediaPlaying = false;\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/views/AdventureGameView.java b/views/AdventureGameView.java
+--- a/views/AdventureGameView.java	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/views/AdventureGameView.java	(date 1701394194285)
+@@ -408,7 +408,7 @@
+     private void getRoomImage() {
+ 
+         int roomNumber = this.model.getPlayer().getCurrentRoom().getRoomNumber();
+-        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".jpeg";
++        String roomImage = this.model.getDirectoryName() + "/room-images/" + roomNumber + ".png";
+ 
+         Image roomImageFile = new Image(roomImage);
+         roomImageView = new ImageView(roomImageFile);
+Index: out/production/assignment2/assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"assignment2\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/out/production/assignment2/assignment2.iml b/out/production/assignment2/assignment2.iml
+--- a/out/production/assignment2/assignment2.iml	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/out/production/assignment2/assignment2.iml	(date 1701394201916)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="assignment2" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
+Index: assignment2.iml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"assignment2\" level=\"project\" />\r\n  </component>\r\n</module>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/assignment2.iml b/assignment2.iml
+--- a/assignment2.iml	(revision 4106737382671618e0fe369e416e36ec3d8ea094)
++++ b/assignment2.iml	(date 1701394205195)
+@@ -8,6 +8,6 @@
+     <orderEntry type="inheritedJdk" />
+     <orderEntry type="sourceFolder" forTests="false" />
+     <orderEntry type="library" name="junit.jupiter" level="project" />
+-    <orderEntry type="library" name="assignment2" level="project" />
++    <orderEntry type="library" name="javafx.media" level="project" />
+   </component>
+ </module>
+\ No newline at end of file
diff --git a/out/production/assignment2/Games/TinyGame/objectImages/.gitkeep b/out/production/assignment2/Games/TinyGame/objectImages/.gitkeep
new file mode 100644
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch
new file mode 100644
diff --git a/out/production/assignment2/Games/TinyGame/room-images/.gitkeep b/out/production/assignment2/Games/TinyGame/room-images/.gitkeep
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch
new file mode 100644
diff --git a/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch b/out/production/assignment2/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]1/shelved.patch
new file mode 100644
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_11_30_2023_9_48_PM_[Changes]/shelved.patch
new file mode 100644
diff --git a/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]1/shelved.patch b/../.idea/shelf/Uncommitted_changes_before_Checkout_at_11_16_2023_12_34_PM_[Changes]1/shelved.patch
new file mode 100644
